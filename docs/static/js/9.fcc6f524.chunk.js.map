{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","libs/Symbol/ImageIO.ts","components/elements/Button/index.tsx","components/elements/TextField/index.tsx","components/utils/Centering/index.tsx","features/connect/Presenter.tsx","features/connect/index.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","G_HASH","NODE","EPOCH","getFile","hash","a","checkConfirmed","tx","TransferTransaction","h","JSON","parse","message","payload","data","innerTxJoin","catch","timer","setInterval","checkUnConfirmed","setTimeout","clearInterval","console","log","transactionHttp","RepositoryFactoryHttp","createTransactionRepository","res","rej","getTransaction","TransactionGroup","Unconfirmed","toPromise","Confirmed","repositoryFactory","agtx","innerTxs","innerTransactions","inTx","saveFile","base64img","gameMode","prikey","previousHash","signer","Account","createFromPrivateKey","NetworkType","TEST_NET","acc","Address","createFromRawAddress","array","MSG_SIZE","i","Math","floor","length","arr","slice","push","txs","agtxs","hashes","create","Deadline","PlainMessage","toAggregate","publicAccount","AggregateTransaction","createComplete","UInt64","fromUint","signedTx","sign","announce","subscribe","x","stringify","version","name","mode","join","substr","st","Component","text","onClick","fill","FButton","variant","SButton","styled","Button","Color","accent","sky","addAlpha","inputRef","fullWidth","htmlFor","label","direction","nowrap","vertical","holizontal","width","height","items","children","Style","wrap","props","apiEndpoint","epochAdjustment","MPage","txHashRef","useRef","mosaicRef","checkRef","useState","mosaicId","setMosaicId","illustMosaic","setIllustMosaic","cx","usePrikey","Root","Centering","Spacer","margin","TextField","Wrapper","Box","sx","flexGrow","current","pk","KeyGenerator","generateUInt64Key","mid","metadataTransaction","MosaicMetadataTransaction","address","MosaicId","aggregateTransaction","metadataHttp","createMetadataRepository","searchCriteria","targetId","metadataType","MetadataType","Mosaic","search","metadataEntries","pageSize","pageNumber","forEach","entry","metadataEntry","scopedMetadataKey","toHex","MosaicCard","Text","Img","src","alt","Container"],"mappings":"6FAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,OA/BZ,mC,uJCcMC,EACJ,mEACIC,EAAO,2CACPC,EAAQ,WAEDC,EAAO,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EACd,IAAIhB,SAAQ,SAACV,EAASC,GAC3B0B,EAAeF,GACZd,MAAK,SAACiB,GACL,GAAIA,aAAcC,sBAAqB,CACrC,IAAMC,EAAYC,KAAKC,MAAMJ,EAAGK,QAAQC,SAASC,KACjDnC,EAAQoC,EAAYN,QAGvBO,OAAM,WACL,IAAMC,EAAQC,aAAY,WACxBC,EAAiBf,GACdd,MAAK,WACJ8B,YAAW,WACTd,EAAeF,GACZd,MAAK,SAACiB,GAEL,GADAc,cAAcJ,GACVV,aAAcC,sBAAqB,CACrC,IAAMC,EAAYC,KAAKC,MAAMJ,EAAGK,QAAQC,SAASC,KACjDnC,EAAQoC,EAAYN,QAGvBO,OAAM,WACLpC,EAAO,YAEV,QAEJoC,OAAM,WACLM,QAAQC,IAAI,gBAEf,YA9BY,2CAAH,sDAmCdJ,EAAmB,SAACf,GACxB,IACMoB,EADoB,IAAIC,wBAAsBxB,GACVyB,8BAC1C,OAAO,IAAIrC,SAAQ,SAACsC,EAAKC,GACvBJ,EACGK,eAAezB,EAAM0B,mBAAiBC,aACtCC,YACA1C,MAAK,WACJsC,OAEDZ,OAAM,WACLW,WAKFrB,EAAiB,SAACF,GACtB,IACMoB,EADoB,IAAIC,wBAAsBxB,GACVyB,8BAC1C,OAAO,IAAIrC,SAAQ,SAACsC,EAAKC,GACvBJ,EACGK,eAAezB,EAAM0B,mBAAiBG,WACtCD,YACA1C,MAAK,SAACiB,GACLoB,EAAIpB,MAELS,OAAM,WACLY,WAIFb,EAAW,uCAAG,WAAOX,GAAP,mBAAAC,EAAA,6DACZ6B,EAAoB,IAAIT,wBAAsBxB,GAC9CuB,EAAkBU,EAAkBR,8BACtCZ,EAAO,GAHO,kBAKX,IAAIzB,SAAQ,SAACV,GAClB6C,EACGK,eAAezB,EAAM0B,mBAAiBG,WACtCD,YACA1C,MAAK,SAAC6C,GACL,IADc,EACRC,EAAYD,EAA8BE,kBADlC,cAEKD,GAFL,IAEd,2BAA6B,CAAC,IAAnBE,EAAkB,QAC3BxB,GAASwB,EAA6B1B,QAAQC,SAHlC,8BAKdlC,EAAQmC,UAdI,2CAAH,sDAmBJyB,EAAQ,uCAAG,WACtBC,EACAC,EACAC,EACAC,GAJsB,2CAAAtC,EAAA,sDAYtB,IANMuC,EAASC,UAAQC,qBAAqBJ,EAAQK,cAAYC,UAC1DC,EAAMC,UAAQC,qBAClB,2CAEIC,EAAkB,GAClBC,EAAW,KACRC,EAAI,EAAGA,GAAKC,KAAKC,MAAMhB,EAAUiB,OAASJ,GAAWC,IACtDI,EAAMlB,EAAUmB,MAAML,EAAID,GAAWC,EAAI,GAAKD,GACpDD,EAAMQ,KAAKF,GAMPG,EAAM,GACNC,EAAQ,GACRC,EAAmB,GAGnB7B,EAAoB,IAAIT,wBAAsBxB,GAC9CuB,EAAkBU,EAAkBR,8BAEjC4B,EAAI,EA5BS,aA4BNA,EAAIF,EAAMK,QA5BJ,oBA8BdnB,EAAO9B,sBAAoBwD,OAC/BC,WAASD,OAAO9D,GAChB+C,EACA,GACAiB,eAAaF,OAAOZ,EAAME,IAC1BP,cAAYC,UACZmB,YAAYvB,EAAOwB,eAErBP,EAAID,KAAKtB,GAELgB,EAAI,MAAQ,IAAMA,IAAMF,EAAMK,OAAS,EAxCvB,wDA4CdtB,EAAOkC,uBAAqBC,eAChCL,WAASD,OAAO9D,GAChB2D,EACAd,cAAYC,SACZ,GACAuB,SAAOC,SAAS,MAGZC,EAAW7B,EAAO8B,KAAKvC,EAAMnC,GAEnCwB,EAAgBmD,SAASF,GAAUG,WACjC,SAACC,GAAD,OAAOvD,QAAQC,IAAIsD,MACnB,SAAC/E,GAAD,OAASwB,QAAQnC,MAAMW,MAEzBgE,EAAMF,KAAKa,GACXV,EAAOH,KAAKa,EAASrE,MAErBkB,QAAQC,IAAI,IAAKkD,GA7DG,QA4BYnB,IA5BZ,iDAgEf,IAAIjE,SAAQ,SAACV,GAClByC,YAAW,WAUT,IATA,IAAMN,EAAOJ,KAAKoE,UAAU,CAC1BC,QAAS,EACTC,KAAM,cACNC,KAAMxC,EACNE,aAAcA,EACd7B,KAAMiD,EAAOmB,KAAK,OAGd7E,EAAI,GACDiD,EAAI,EAAGA,GAAKC,KAAKC,MAAM1C,EAAK2C,OAASJ,GAAWC,IACvDjD,EAAEuD,KAAK9C,EAAKqE,OAAO7B,EAAID,EAAUA,IAEnC,IAAM9C,EAAKC,sBAAoBwD,OAC7BC,WAASD,OAAO9D,GAChB+C,EACA,GACAiB,eAAaF,OAAOlD,GACpBiC,cAAYC,SACZuB,SAAOC,SAAS,MAGZY,EAAKxC,EAAO8B,KAAKnE,EAAIP,GAE3BwB,EAAgBmD,SAASS,GAAIR,WAC3B,SAACC,GAAD,OAAOvD,QAAQC,IAAIsD,MACnB,SAAC/E,GAAD,OAASwB,QAAQnC,MAAMW,MAEzBnB,EAAQyG,EAAGhF,QACV,SA9FiB,4CAAH,6D,6FC5ENiF,IAhBqB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,QAA4B,IAAnBC,KACpD,YADuE,SAGnE,cAACC,EAAD,CAASC,QAAQ,WAAWH,QAASA,EAArC,SACGD,IAML,cAACK,EAAD,CAASD,QAAQ,WAAWH,QAASA,EAArC,SACGD,KAOP,IAAMG,EAAUG,YAAOC,IAAPD,CAAH,4IAEGE,IAAMC,OAAOC,IACXF,IAAMC,OAAOC,KAGzBL,EAAUC,YAAOC,IAAPD,CAAH,mLACFE,IAAMC,OAAOC,IACNF,IAAMC,OAAOC,IAGXF,IAAMC,OAAOC,IACTC,YAASH,IAAMC,OAAOC,IAAK,O,6HCvBpCX,IATqB,SAAC,GAAiC,IAA/Ba,EAA8B,EAA9BA,SAAUZ,EAAoB,EAApBA,KAAS3F,EAAW,iBACnE,OACE,eAAC,IAAD,CAAawG,WAAS,EAAtB,UACE,cAAC,IAAD,CAAYC,QAAQ,8BAApB,SAAmDd,IACnD,cAAC,IAAD,2BAAmB3F,GAAnB,IAAyBwG,WAAS,EAACE,MAAOf,EAAMY,SAAUA,U,wECuBjDb,IAvB8B,SAAC,GASvC,IAAD,IARJiB,iBAQI,MARQ,MAQR,MAPJC,cAOI,aANJC,gBAMI,MANO,SAMP,MALJC,kBAKI,MALS,SAKT,MAJJC,aAII,MAJI,OAIJ,MAHJC,cAGI,MAHK,OAGL,MAFJC,aAEI,MAFI,SAEJ,EADJC,EACI,EADJA,SAEA,OACE,cAACC,EAAD,CACER,UAAWA,EACXG,WAAYA,EACZD,SAAUA,EACVE,MAAOA,EACPC,OAAQA,EACRC,MAAOA,EACPG,KAAMR,EAAS,SAAW,OAP5B,SAQGM,KAMP,IAAMC,EAAQlB,YAAO,MAAPA,CAAH,kLAUA,SAACoB,GAAD,OAAWA,EAAMN,SAChB,SAACM,GAAD,OAAWA,EAAML,UACT,SAACK,GAAD,OAAWA,EAAMV,aACjC,SAACU,GAAD,OAAWA,EAAMD,MAAQ,qBACR,SAACC,GAAD,OAAWA,EAAMP,cACnB,SAACO,GAAD,OAAWA,EAAMR,YACnB,SAACQ,GAAD,OAAWA,EAAMJ,U,4KC9B5BK,EAAc,2CAIdC,EAAkB,WAuITC,EApIU,WACvB,IAAMC,EAAYC,iBAAyB,MACrCC,EAAYD,iBAAyB,MACrCE,EAAWF,iBAAyB,MAE1C,EAAgCG,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAuCMC,EAAKC,cAiDX,OACE,eAACC,EAAD,WACE,eAACC,EAAA,EAAD,CAAW1B,UAAU,SAASG,WAAW,QAAzC,UACE,cAACwB,EAAA,EAAD,CAAQC,OAAO,QACf,cAACC,EAAA,EAAD,CAAW7C,KAAK,SAASY,SAAUkB,IACnC,cAACa,EAAA,EAAD,CAAQC,OAAO,QACf,cAACC,EAAA,EAAD,CAAW7C,KAAK,WAAWY,SAAUoB,IACrC,eAACc,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,KACrB,cAACN,EAAA,EAAD,CAAQC,OAAO,MAAf,SACE,cAACrC,EAAA,EAAD,CAAQP,KAAK,OAAOC,QA1DjB,WACX,GACgB,OAAd+B,GACsB,OAAtBA,EAAUkB,SACI,OAAdpB,GACsB,OAAtBA,EAAUoB,cAKDzI,IAAP8H,EAAJ,CAEA,IAAMY,EAAKZ,EAAGnF,OAERO,EAAMJ,UAAQC,qBAAqB2F,EA/DzB,KAiEV1J,EAAM2J,eAAaC,kBAAkB,QACrCC,EAAMtB,EAAUkB,QAAQtJ,MACxBA,EAAQkI,EAAUoB,QAAQtJ,MAE1B2J,EAAsBC,4BAA0B9E,OACpDC,WAASD,OAAOkD,GAChBjE,EAAI8F,QACJhK,EACA,IAAIiK,WAASJ,GACb1J,EAAMuE,OACNvE,EA3Ec,KA+EV+J,EAAuB5E,uBAAqBC,eAChDL,WAASD,OAAOkD,GAChB,CAAC2B,EAAoB1E,YAAYlB,EAAImB,gBAjFvB,IAmFd,GACAG,SAAOC,SAAS,MAGZC,EAAWxB,EAAIyB,KAAKuE,EA1F5B,oEA4F4B,IAAIxH,wBAAsBwF,GACVvF,8BAE1BiD,SAASF,GAAUG,WACjC,SAACC,GAAD,OAAOvD,QAAQC,IAAIsD,MACnB,SAAC/E,GAAD,OAASwB,QAAQnC,MAAMW,eAgBrB,cAACmI,EAAA,EAAD,CAAQC,OAAO,SACf,cAACC,EAAA,EAAD,CAAW7C,KAAK,WAAWY,SAAUqB,IACrC,eAACa,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,KACrB,cAACN,EAAA,EAAD,CAAQC,OAAO,MAAf,SACE,cAACrC,EAAA,EAAD,CAAQP,KAAK,QAAQC,QAzGjB,WACZ,GAAiB,OAAbgC,GAA0C,OAArBA,EAASiB,QAAlC,CAGA,IAAMI,EAAM,IAAII,WAASzB,EAASiB,QAAQtJ,OAC1CoC,QAAQC,IAAI,MAAOqH,GACnBlB,EAAYH,EAASiB,QAAQtJ,OAE7B,IACMgK,EADoB,IAAIzH,wBAAsBwF,GACbkC,2BAEjCC,EAAiB,CACrBC,SAAUT,EACVU,aAAcC,eAAaC,QAE7BN,EAAaO,OAAOL,GAAgBxE,WAClC,SAAC8E,GACKA,EAAgBC,SAAW,GAC7BrI,QAAQC,IAAI,OAAQmI,EAAgBE,YACpCF,EAAgB5I,KAAK+I,SAAQ,SAACC,GAC5B,IAAMC,EAAgBD,EAAMC,cAC5BzI,QAAQC,IAAI,SAAUwI,EAAcC,kBAAkBC,SAER,qBAA5CF,EAAcC,kBAAkBC,UAEhC3I,QAAQC,IAAI,WAAYwI,EAAc7K,OACtCiB,YAAQ4J,EAAc7K,OAAOI,MAAK,SAACwB,GACjC8G,EAAgB9G,WAKtBQ,QAAQC,IAAI,6DAGhB,SAACzB,GAAD,OAASwB,QAAQC,IAAIzB,kBA0EH,KAAjB6H,GACC,eAACuC,EAAD,WACE,eAACC,EAAD,wBAAiB1C,KACjB,cAAC2C,EAAD,CACEC,IAAK1C,EACLjB,MAAM,QACNC,OAAO,QACP2D,IAAI,uBASVlC,EAAUxC,YAAO,MAAPA,CAAH,8CAIPmC,EAAOnC,YAAO,MAAPA,CAAH,yEAKJsE,EAAatE,YAAO,MAAPA,CAAH,sNAWVuE,EAAOvE,YAAO,MAAPA,CAAH,gDAIJwE,EAAMxE,YAAO,MAAPA,CAAH,wDCtLM2E,UAJc,WAC3B,OAAO,cAAC,EAAD","file":"static/js/9.fcc6f524.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import {\n  Account,\n  AggregateTransaction,\n  Deadline,\n  NetworkType,\n  TransferTransaction,\n  UInt64,\n  RepositoryFactoryHttp,\n  PlainMessage,\n  TransactionGroup,\n  Transaction,\n  Address,\n} from 'symbol-sdk'\n\nconst G_HASH =\n  '7FCCD304802016BEBBCD342A332F91FF1F3BB5E902988B352697BE245F48E836'\nconst NODE = 'https://sym-test-01.opening-line.jp:3001'\nconst EPOCH = 1637848847\n\nexport const getFile = async (hash: string): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    checkConfirmed(hash)\n      .then((tx) => {\n        if (tx instanceof TransferTransaction) {\n          const h: string = JSON.parse(tx.message.payload).data\n          resolve(innerTxJoin(h))\n        }\n      })\n      .catch(() => {\n        const timer = setInterval(() => {\n          checkUnConfirmed(hash)\n            .then(() => {\n              setTimeout(() => {\n                checkConfirmed(hash)\n                  .then((tx) => {\n                    clearInterval(timer)\n                    if (tx instanceof TransferTransaction) {\n                      const h: string = JSON.parse(tx.message.payload).data\n                      resolve(innerTxJoin(h))\n                    }\n                  })\n                  .catch(() => {\n                    reject('404')\n                  })\n              }, 1000)\n            })\n            .catch(() => {\n              console.log('loading')\n            })\n        }, 1000)\n      })\n  })\n}\n\nconst checkUnConfirmed = (hash: string): Promise<void> => {\n  const repositoryFactory = new RepositoryFactoryHttp(NODE)\n  const transactionHttp = repositoryFactory.createTransactionRepository()\n  return new Promise((res, rej) => {\n    transactionHttp\n      .getTransaction(hash, TransactionGroup.Unconfirmed)\n      .toPromise()\n      .then(() => {\n        rej()\n      })\n      .catch(() => {\n        res()\n      })\n  })\n}\n\nconst checkConfirmed = (hash: string): Promise<Transaction> => {\n  const repositoryFactory = new RepositoryFactoryHttp(NODE)\n  const transactionHttp = repositoryFactory.createTransactionRepository()\n  return new Promise((res, rej) => {\n    transactionHttp\n      .getTransaction(hash, TransactionGroup.Confirmed)\n      .toPromise()\n      .then((tx: Transaction) => {\n        res(tx)\n      })\n      .catch(() => {\n        rej()\n      })\n  })\n}\nconst innerTxJoin = async (hash: string): Promise<string> => {\n  const repositoryFactory = new RepositoryFactoryHttp(NODE)\n  const transactionHttp = repositoryFactory.createTransactionRepository()\n  let data = ''\n\n  return new Promise((resolve) => {\n    transactionHttp\n      .getTransaction(hash, TransactionGroup.Confirmed)\n      .toPromise()\n      .then((agtx) => {\n        const innerTxs = (agtx as AggregateTransaction).innerTransactions\n        for (const inTx of innerTxs) {\n          data += (inTx as TransferTransaction).message.payload\n        }\n        resolve(data)\n      })\n  })\n}\n\nexport const saveFile = async (\n  base64img: string,\n  gameMode: string,\n  prikey: string,\n  previousHash: string\n): Promise<string> => {\n  const signer = Account.createFromPrivateKey(prikey, NetworkType.TEST_NET)\n  const acc = Address.createFromRawAddress(\n    'TDEC5VUUAUYHKI2Y45WBDMGODAS42P3PPCTMGUY'\n  )\n  const array: string[] = []\n  const MSG_SIZE = 1023\n  for (let i = 0; i <= Math.floor(base64img.length / MSG_SIZE); i++) {\n    const arr = base64img.slice(i * MSG_SIZE, (i + 1) * MSG_SIZE)\n    array.push(arr)\n  }\n  // console.log('arr', array)\n\n  //===================================================\n\n  const txs = []\n  const agtxs = []\n  const hashes: string[] = []\n  //===================================================\n\n  const repositoryFactory = new RepositoryFactoryHttp(NODE)\n  const transactionHttp = repositoryFactory.createTransactionRepository()\n\n  for (let i = 0; i < array.length; i++) {\n    // console.log(\"row\", array[i]);\n    const inTx = TransferTransaction.create(\n      Deadline.create(EPOCH),\n      acc,\n      [],\n      PlainMessage.create(array[i]),\n      NetworkType.TEST_NET\n    ).toAggregate(signer.publicAccount)\n\n    txs.push(inTx)\n\n    if (i % 100 !== 99 && i !== array.length - 1) {\n      continue\n    }\n\n    const agtx = AggregateTransaction.createComplete(\n      Deadline.create(EPOCH),\n      txs,\n      NetworkType.TEST_NET,\n      [],\n      UInt64.fromUint(10000000)\n    )\n\n    const signedTx = signer.sign(agtx, G_HASH)\n\n    transactionHttp.announce(signedTx).subscribe(\n      (x) => console.log(x),\n      (err) => console.error(err)\n    )\n    agtxs.push(signedTx)\n    hashes.push(signedTx.hash)\n\n    console.log('a', signedTx)\n  }\n\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const data = JSON.stringify({\n        version: 1,\n        name: 'symbol-draw',\n        mode: gameMode,\n        previousHash: previousHash,\n        data: hashes.join(','),\n      })\n\n      const a = []\n      for (let i = 0; i <= Math.floor(data.length / MSG_SIZE); i++) {\n        a.push(data.substr(i * MSG_SIZE, MSG_SIZE))\n      }\n      const tx = TransferTransaction.create(\n        Deadline.create(EPOCH),\n        acc,\n        [],\n        PlainMessage.create(data),\n        NetworkType.TEST_NET,\n        UInt64.fromUint(2000000)\n      )\n\n      const st = signer.sign(tx, G_HASH)\n\n      transactionHttp.announce(st).subscribe(\n        (x) => console.log(x),\n        (err) => console.error(err)\n      )\n      resolve(st.hash)\n    }, 1000)\n  })\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nimport { Button } from '@mui/material'\nimport Color, { addAlpha } from '../../../utils/Color'\n\nexport interface Props {\n  text: string\n  onClick: () => void\n  fill?: boolean\n}\n\nconst Component: React.VFC<Props> = ({ text, onClick, fill = false }) => {\n  if (fill) {\n    return (\n      <FButton variant=\"outlined\" onClick={onClick}>\n        {text}\n      </FButton>\n    )\n  }\n\n  return (\n    <SButton variant=\"outlined\" onClick={onClick}>\n      {text}\n    </SButton>\n  )\n}\n\nexport default Component\n\nconst FButton = styled(Button)`\n  color: white !important;\n  background: ${Color.accent.sky} !important;\n  border-color: ${Color.accent.sky} !important;\n  font-weight: 700;\n`\nconst SButton = styled(Button)`\n  color: ${Color.accent.sky} !important;\n  border-color: ${Color.accent.sky} !important;\n\n  :hover {\n    border-color: ${Color.accent.sky} !important;\n    background-color: ${addAlpha(Color.accent.sky, 0.04)} !important;\n  }\n`\n","import OutlinedInput from '@mui/material/OutlinedInput'\nimport FormControl from '@mui/material/FormControl'\nimport InputLabel from '@mui/material/InputLabel'\nimport React, { Ref } from 'react'\n\nexport type Props = {\n  inputRef: Ref<HTMLInputElement>\n  text: string\n}\n\nconst Component: React.VFC<Props> = ({ inputRef, text, ...args }) => {\n  return (\n    <FormControl fullWidth>\n      <InputLabel htmlFor=\"outlined-adornment-password\">{text}</InputLabel>\n      <OutlinedInput {...args} fullWidth label={text} inputRef={inputRef} />\n    </FormControl>\n  )\n}\n\nexport default Component\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nexport type CenteringProps = {\n  direction?: string\n  nowrap?: boolean\n  vertical?: string\n  holizontal?: string\n  width?: string\n  height?: string\n  items?: string\n  children?: React.ReactNode\n}\n\nconst Component: React.VFC<CenteringProps> = ({\n  direction = 'row',\n  nowrap = false,\n  vertical = 'center',\n  holizontal = 'center',\n  width = '100%',\n  height = '100%',\n  items = 'normal',\n  children,\n}) => {\n  return (\n    <Style\n      direction={direction}\n      holizontal={holizontal}\n      vertical={vertical}\n      width={width}\n      height={height}\n      items={items}\n      wrap={nowrap ? 'nowrap' : 'wrap'}>\n      {children}\n    </Style>\n  )\n}\nexport default Component\n\nconst Style = styled('div')<{\n  direction: string\n  wrap: string\n  vertical: string\n  holizontal: string\n  width: string\n  height: string\n  items: string\n}>`\n  display: flex;\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  flex-direction: ${(props) => props.direction};\n  ${(props) => props.wrap && 'flex-wrap: wrap'};\n  justify-content: ${(props) => props.holizontal};\n  align-content: ${(props) => props.vertical};\n  align-items: ${(props) => props.items};\n`\n","import { Box } from '@mui/material'\nimport styled from '@emotion/styled'\n\nimport React, { useRef, useState } from 'react'\nimport TextField from '../../components/elements/TextField'\nimport Button from '../../components/elements/Button'\n\nimport Centering from '../../components/utils/Centering'\nimport Spacer from '../../components/utils/Spacer'\nimport {\n  Account,\n  AggregateTransaction,\n  Deadline,\n  KeyGenerator,\n  Metadata,\n  MetadataType,\n  MosaicId,\n  MosaicMetadataTransaction,\n  RepositoryFactoryHttp,\n  UInt64,\n  Page,\n} from 'symbol-sdk'\nimport { getFile } from '../../libs/Symbol/ImageIO'\nimport { usePrikey } from '../../utils/PrikeyContext'\n\nconst apiEndpoint = 'https://sym-test-01.opening-line.jp:3001' //config.SYMBOL_API_ENDPOINT\nconst generationHash =\n  '7FCCD304802016BEBBCD342A332F91FF1F3BB5E902988B352697BE245F48E836' //config.GENERATION_HASH_SEED\n// const feeMultiplier = 200 //config.FEE_MULTIPLIER\nconst epochAdjustment = 1637848847 //config.EPOCH_ADJUSTMENT\nconst networkType = 152 //config.NETWORK_TYPE\n\nconst MPage: React.VFC = () => {\n  const txHashRef = useRef<HTMLInputElement>(null)\n  const mosaicRef = useRef<HTMLInputElement>(null)\n  const checkRef = useRef<HTMLInputElement>(null)\n\n  const [mosaicId, setMosaicId] = useState('')\n\n  const [illustMosaic, setIllustMosaic] = useState('')\n  const check = () => {\n    if (checkRef === null || checkRef.current === null) {\n      return\n    }\n    const mid = new MosaicId(checkRef.current.value)\n    console.log('mid', mid)\n    setMosaicId(checkRef.current.value)\n\n    const repositoryFactory = new RepositoryFactoryHttp(apiEndpoint)\n    const metadataHttp = repositoryFactory.createMetadataRepository()\n\n    const searchCriteria = {\n      targetId: mid,\n      metadataType: MetadataType.Mosaic,\n    }\n    metadataHttp.search(searchCriteria).subscribe(\n      (metadataEntries: Page<Metadata>) => {\n        if (metadataEntries.pageSize > 0) {\n          console.log('Page', metadataEntries.pageNumber)\n          metadataEntries.data.forEach((entry: Metadata) => {\n            const metadataEntry = entry.metadataEntry\n            console.log('Key:\\t', metadataEntry.scopedMetadataKey.toHex())\n            if (\n              metadataEntry.scopedMetadataKey.toHex() === 'F5CC2D09ED048388'\n            ) {\n              console.log('Value:\\t', metadataEntry.value)\n              getFile(metadataEntry.value).then((data) => {\n                setIllustMosaic(data)\n              })\n            }\n          })\n        } else {\n          console.log('\\n The mosaic does not have metadata entries assigned.')\n        }\n      },\n      (err) => console.log(err)\n    )\n  }\n  const cx = usePrikey()\n  const link = () => {\n    if (\n      mosaicRef === null ||\n      mosaicRef.current === null ||\n      txHashRef === null ||\n      txHashRef.current === null\n    ) {\n      return\n    }\n\n    if (cx === undefined) return\n\n    const pk = cx.prikey\n\n    const acc = Account.createFromPrivateKey(pk, networkType)\n\n    const key = KeyGenerator.generateUInt64Key('CERT')\n    const mid = mosaicRef.current.value\n    const value = txHashRef.current.value\n\n    const metadataTransaction = MosaicMetadataTransaction.create(\n      Deadline.create(epochAdjustment),\n      acc.address,\n      key,\n      new MosaicId(mid),\n      value.length,\n      value,\n      networkType\n    )\n\n    const aggregateTransaction = AggregateTransaction.createComplete(\n      Deadline.create(epochAdjustment),\n      [metadataTransaction.toAggregate(acc.publicAccount)],\n      networkType,\n      [],\n      UInt64.fromUint(2000000)\n    )\n\n    const signedTx = acc.sign(aggregateTransaction, generationHash)\n\n    const repositoryFactory = new RepositoryFactoryHttp(apiEndpoint)\n    const transactionHttp = repositoryFactory.createTransactionRepository()\n\n    transactionHttp.announce(signedTx).subscribe(\n      (x) => console.log(x),\n      (err) => console.error(err)\n    )\n  }\n  return (\n    <Root>\n      <Centering direction=\"column\" holizontal=\"start\">\n        <Spacer margin=\"8px\"></Spacer>\n        <TextField text=\"TxHash\" inputRef={txHashRef} />\n        <Spacer margin=\"8px\"></Spacer>\n        <TextField text=\"MosaicID\" inputRef={mosaicRef} />\n        <Wrapper>\n          <Box sx={{ flexGrow: 1 }} />\n          <Spacer margin=\"8px\">\n            <Button text=\"LINK\" onClick={link} />\n          </Spacer>\n        </Wrapper>\n        <Spacer margin=\"32px\"></Spacer>\n        <TextField text=\"MosaicID\" inputRef={checkRef} />\n        <Wrapper>\n          <Box sx={{ flexGrow: 1 }} />\n          <Spacer margin=\"8px\">\n            <Button text=\"CHECK\" onClick={check} />\n          </Spacer>\n        </Wrapper>\n      </Centering>\n      {illustMosaic !== '' && (\n        <MosaicCard>\n          <Text>MosaicID: {mosaicId}</Text>\n          <Img\n            src={illustMosaic}\n            width=\"500px\"\n            height=\"500px\"\n            alt=\"ilustmosaic\"\n          />\n        </MosaicCard>\n      )}\n    </Root>\n  )\n}\n\nexport default MPage\nconst Wrapper = styled('div')`\n  display: flex;\n`\n\nconst Root = styled('div')`\n  display: flex;\n  flex-direction: column;\n`\n\nconst MosaicCard = styled('div')`\n  border: 1px solid #b429f9;\n  border-radius: 16px;\n  margin: 16px;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Text = styled('div')`\n  font-size: 48px;\n`\n\nconst Img = styled('img')`\n  border: 1px solid black;\n`\n","import React from 'react'\nimport Page from './Presenter'\n\nconst Container: React.VFC = () => {\n  return <Page />\n}\n\nexport default Container\n"],"sourceRoot":""}