{"version":3,"sources":["libs/Symbol/ImageIO.ts","libs/Symbol/Apostille.ts","components/elements/ShareModal/index.tsx","components/elements/Canvas/index.tsx","features/draw/Presenter.tsx","features/draw/index.tsx"],"names":["G_HASH","NODE","EPOCH","getFile","hash","a","Promise","resolve","reject","checkConfirmed","then","tx","TransferTransaction","h","JSON","parse","message","payload","data","innerTxJoin","catch","timer","setInterval","checkUnConfirmed","setTimeout","clearInterval","console","log","transactionHttp","RepositoryFactoryHttp","createTransactionRepository","res","rej","getTransaction","TransactionGroup","Unconfirmed","toPromise","Confirmed","repositoryFactory","agtx","innerTxs","innerTransactions","inTx","saveFile","base64img","gameMode","prikey","previousHash","signer","Account","createFromPrivateKey","NetworkType","TEST_NET","acc","Address","createFromRawAddress","array","MSG_SIZE","i","Math","floor","length","arr","slice","push","txs","agtxs","hashes","create","Deadline","PlainMessage","toAggregate","publicAccount","AggregateTransaction","createComplete","UInt64","fromUint","signedTx","sign","announce","subscribe","x","err","error","stringify","version","name","mode","join","substr","st","apiEndpoint","getTxHash","filename","match","getValidStatus","r","isValid","type","audit","file","fileReader","fileBuf","AuditService","apostilleAccount","status","t","timestamp","split","apostilleAcount","e","baselink","Component","open","setOpen","txHash","getI18nText","useI18n","useState","loading","copy","React","useCallback","navigator","clipboard","writeText","onClose","SPaper","variant","component","button","url","Wrapper","Provider","value","size","MLeft","onClick","img","buf","Buffer","from","f","File","buffer","document","createElement","href","download","click","styled","Paper","stageRef","image","sharePrev","tool","setTool","setSize","color","setColor","lines","setLines","pastLines","setPastLines","isDrawing","useRef","FlexDiv","FlexCol","IconButton","SBsPenFill","Wrap","Slider","defaultValue","valueLabelDisplay","max","min","marks","label","onChange","target","newLines","filter","l","prev","disabled","addLine","flat","StageDiv","width","height","onMouseDown","current","pos","getStage","getPointerPosition","points","y","onMousemove","point","lastLine","concat","splice","onMouseup","style","border","marginTop","ref","map","line","stroke","strokeWidth","tension","lineCap","globalCompositeOperation","CustomSketchPicker","onChangeComplete","hex","Wraper","margin","Tooltip","title","Button","endIcon","div","SketchPicker","marginLeft","props","Page","Image","setImage","setOpenPM","setTxHash","isLoading","setIsLoading","setError","context","usePrikey","setLoading","useEffect","src","Canvas","undefined","toDataURL","ShareModal","Modal","Typography","Container","useParams"],"mappings":"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","file":"static/js/10.a4dbd8ee.chunk.js","sourcesContent":["import {\n  Account,\n  AggregateTransaction,\n  Deadline,\n  NetworkType,\n  TransferTransaction,\n  UInt64,\n  RepositoryFactoryHttp,\n  PlainMessage,\n  TransactionGroup,\n  Transaction,\n  Address,\n} from 'symbol-sdk'\n\nconst G_HASH =\n  '7FCCD304802016BEBBCD342A332F91FF1F3BB5E902988B352697BE245F48E836'\nconst NODE = 'https://sym-test-01.opening-line.jp:3001'\nconst EPOCH = 1637848847\n\nexport const getFile = async (hash: string): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    checkConfirmed(hash)\n      .then((tx) => {\n        if (tx instanceof TransferTransaction) {\n          const h: string = JSON.parse(tx.message.payload).data\n          resolve(innerTxJoin(h))\n        }\n      })\n      .catch(() => {\n        const timer = setInterval(() => {\n          checkUnConfirmed(hash)\n            .then(() => {\n              setTimeout(() => {\n                checkConfirmed(hash)\n                  .then((tx) => {\n                    clearInterval(timer)\n                    if (tx instanceof TransferTransaction) {\n                      const h: string = JSON.parse(tx.message.payload).data\n                      resolve(innerTxJoin(h))\n                    }\n                  })\n                  .catch(() => {\n                    reject('404')\n                  })\n              }, 1000)\n            })\n            .catch(() => {\n              console.log('loading')\n            })\n        }, 1000)\n      })\n  })\n}\n\nconst checkUnConfirmed = (hash: string): Promise<void> => {\n  const repositoryFactory = new RepositoryFactoryHttp(NODE)\n  const transactionHttp = repositoryFactory.createTransactionRepository()\n  return new Promise((res, rej) => {\n    transactionHttp\n      .getTransaction(hash, TransactionGroup.Unconfirmed)\n      .toPromise()\n      .then(() => {\n        rej()\n      })\n      .catch(() => {\n        res()\n      })\n  })\n}\n\nconst checkConfirmed = (hash: string): Promise<Transaction> => {\n  const repositoryFactory = new RepositoryFactoryHttp(NODE)\n  const transactionHttp = repositoryFactory.createTransactionRepository()\n  return new Promise((res, rej) => {\n    transactionHttp\n      .getTransaction(hash, TransactionGroup.Confirmed)\n      .toPromise()\n      .then((tx: Transaction) => {\n        res(tx)\n      })\n      .catch(() => {\n        rej()\n      })\n  })\n}\nconst innerTxJoin = async (hash: string): Promise<string> => {\n  const repositoryFactory = new RepositoryFactoryHttp(NODE)\n  const transactionHttp = repositoryFactory.createTransactionRepository()\n  let data = ''\n\n  return new Promise((resolve) => {\n    transactionHttp\n      .getTransaction(hash, TransactionGroup.Confirmed)\n      .toPromise()\n      .then((agtx) => {\n        const innerTxs = (agtx as AggregateTransaction).innerTransactions\n        for (const inTx of innerTxs) {\n          data += (inTx as TransferTransaction).message.payload\n        }\n        resolve(data)\n      })\n  })\n}\n\nexport const saveFile = async (\n  base64img: string,\n  gameMode: string,\n  prikey: string,\n  previousHash: string\n): Promise<string> => {\n  const signer = Account.createFromPrivateKey(prikey, NetworkType.TEST_NET)\n  const acc = Address.createFromRawAddress(\n    'TDEC5VUUAUYHKI2Y45WBDMGODAS42P3PPCTMGUY'\n  )\n  const array: string[] = []\n  const MSG_SIZE = 1023\n  for (let i = 0; i <= Math.floor(base64img.length / MSG_SIZE); i++) {\n    const arr = base64img.slice(i * MSG_SIZE, (i + 1) * MSG_SIZE)\n    array.push(arr)\n  }\n  // console.log('arr', array)\n\n  //===================================================\n\n  const txs = []\n  const agtxs = []\n  const hashes: string[] = []\n  //===================================================\n\n  const repositoryFactory = new RepositoryFactoryHttp(NODE)\n  const transactionHttp = repositoryFactory.createTransactionRepository()\n\n  for (let i = 0; i < array.length; i++) {\n    // console.log(\"row\", array[i]);\n    const inTx = TransferTransaction.create(\n      Deadline.create(EPOCH),\n      acc,\n      [],\n      PlainMessage.create(array[i]),\n      NetworkType.TEST_NET\n    ).toAggregate(signer.publicAccount)\n\n    txs.push(inTx)\n\n    if (i % 100 !== 99 && i !== array.length - 1) {\n      continue\n    }\n\n    const agtx = AggregateTransaction.createComplete(\n      Deadline.create(EPOCH),\n      txs,\n      NetworkType.TEST_NET,\n      [],\n      UInt64.fromUint(10000000)\n    )\n\n    const signedTx = signer.sign(agtx, G_HASH)\n\n    transactionHttp.announce(signedTx).subscribe(\n      (x) => console.log(x),\n      (err) => console.error(err)\n    )\n    agtxs.push(signedTx)\n    hashes.push(signedTx.hash)\n\n    console.log('a', signedTx)\n  }\n\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const data = JSON.stringify({\n        version: 1,\n        name: 'symbol-draw',\n        mode: gameMode,\n        previousHash: previousHash,\n        data: hashes.join(','),\n      })\n\n      const a = []\n      for (let i = 0; i <= Math.floor(data.length / MSG_SIZE); i++) {\n        a.push(data.substr(i * MSG_SIZE, MSG_SIZE))\n      }\n      const tx = TransferTransaction.create(\n        Deadline.create(EPOCH),\n        acc,\n        [],\n        PlainMessage.create(data),\n        NetworkType.TEST_NET,\n        UInt64.fromUint(2000000)\n      )\n\n      const st = signer.sign(tx, G_HASH)\n\n      transactionHttp.announce(st).subscribe(\n        (x) => console.log(x),\n        (err) => console.error(err)\n      )\n      resolve(st.hash)\n    }, 1000)\n  })\n}\n","import { format } from 'date-fns'\n// import config from 'utils/config/SymbolConfig'\nimport * as fileReader from 'promise-file-reader'\nimport {\n  ApostilleTransaction,\n  AuditService,\n  HashFunctionCreator,\n  HashingType,\n  IApostilleOptions,\n  IAuditResult,\n  IPartialTxAuditResult,\n} from 'simple-apostille-v2'\nimport {\n  Account,\n  SignedTransaction,\n  RepositoryFactoryHttp,\n  TransactionService,\n  Address,\n} from 'symbol-sdk'\n\nconst apiEndpoint = 'https://sym-test-01.opening-line.jp:3001' //config.SYMBOL_API_ENDPOINT\nconst generationHash =\n  '7FCCD304802016BEBBCD342A332F91FF1F3BB5E902988B352697BE245F48E836' //config.GENERATION_HASH_SEED\nconst feeMultiplier = 200 //config.FEE_MULTIPLIER\nconst epochAdjustment = 1637848847 //config.EPOCH_ADJUSTMENT\nconst networkType = 152 //config.NETWORK_TYPE\n\nexport type AuditData = {\n  signer: Address\n  apostilleAcount: Address\n  hash: string\n  status: number\n  timestamp: string\n}\n\nexport const getApostilleFileName = (\n  fileName: string,\n  txHash: string\n): string => {\n  const date = format(new Date(), 'yyyy-MM-dd')\n  const [fn, ext] = fileName.split('.')\n  const apostilleFileName = `${fn} -- Apostille TX ${txHash} -- ${date}.${ext}`\n  return apostilleFileName\n}\n\nexport const getFileHash = async (file: File): Promise<string> => {\n  const fileBuffer = await fileReader.readAsArrayBuffer(file)\n  const hashFunc = HashFunctionCreator.create(HashingType.Type.sha256)\n  return hashFunc.hashing(fileBuffer)\n}\n\nconst createAnnounceInfo = async (\n  hashedData: string,\n  fileName: string,\n  signer: Account\n) => {\n  const salt = String(new Date().getTime())\n  const apostilleTx = ApostilleTransaction.createFromHashedData(\n    hashedData,\n    HashingType.Type.sha256,\n    salt + fileName,\n    signer,\n    networkType,\n    generationHash,\n    feeMultiplier,\n    apiEndpoint,\n    epochAdjustment\n  )\n\n  return await apostilleTx.singedTransactionAndAnnounceType()\n}\n\nexport const createApostilleTransaction = async (\n  file: File,\n  signer: Account\n): Promise<unknown> => {\n  if (file === null || signer === null) return\n  try {\n    const fileHash = await getFileHash(file)\n    const announceInfo = await createAnnounceInfo(fileHash, file.name, signer)\n    if (announceInfo) {\n      return announceTransactionByComplete(announceInfo.signedTransaction)\n    }\n  } catch (err) {\n    console.log('err:', err)\n    return err\n  }\n}\n\nconst createRepositoryFactory = () => {\n  return new RepositoryFactoryHttp(apiEndpoint, {\n    generationHash,\n    networkType,\n    websocketUrl: `${apiEndpoint.replace('http', 'ws')}/ws`,\n    websocketInjected: WebSocket,\n  })\n}\nconst createTransactionService = () => {\n  const repositoryFactory = createRepositoryFactory()\n  return new TransactionService(\n    repositoryFactory.createTransactionRepository(),\n    repositoryFactory.createReceiptRepository()\n  )\n}\n\nconst createListener = () => {\n  const repositoryFactory = createRepositoryFactory()\n  return repositoryFactory.createListener()\n}\n\nconst announceTransactionByComplete = async (signedTx: SignedTransaction) => {\n  return new Promise((resolve, reject) => {\n    const transactionService = createTransactionService()\n    const listener = createListener()\n\n    if (transactionService && listener) {\n      listener\n        .open()\n        .then(() => {\n          transactionService.announce(signedTx, listener).subscribe(\n            (x) => {\n              listener.close()\n              console.log('complate')\n              resolve(x)\n            },\n            (err) => {\n              listener.close()\n              console.log('err:', err)\n              reject(err)\n            }\n          )\n        })\n        .catch((err) => {\n          console.log('err:', err)\n          reject(err)\n        })\n    }\n  })\n}\nconst createOption = (title: string): IApostilleOptions => {\n  return {\n    metadata: {\n      title: title,\n    },\n  }\n}\n\nconst getTxHash = (filename: string): string => {\n  const regexp = /--\\sApostille\\sTX\\s(\\w+)\\s--/\n  const match = filename.match(regexp)\n  if (match === null || match.length < 1) {\n    console.log('not match')\n    return ''\n  } else {\n    console.log('match')\n    return match[1]\n  }\n}\n\nconst getValidStatus = (r: IAuditResult | IPartialTxAuditResult): number => {\n  if (r.isValid) {\n    if (r.type === 0) return 0\n    if (r.type === 1) return 1\n  }\n  return -1\n}\n\nexport const audit = async (file: File): Promise<AuditData> => {\n  const fileBuf = await fileReader.readAsArrayBuffer(file)\n  const hash = getTxHash(file.name)\n  return new Promise((resolve, reject) => {\n    AuditService.audit(fileBuf, hash, apiEndpoint)\n      .then((r) => {\n        if (!r.signer || !r.apostilleAccount) {\n          // setOpen(true)\n          console.log('reject', r)\n          reject()\n        } else {\n          const status = getValidStatus(r)\n          const t: string =\n            JSON.parse(JSON.stringify(r)).timestamp.split('.')[0] || ''\n          resolve({\n            signer: r.signer,\n            apostilleAcount: r.apostilleAccount,\n            hash: hash,\n            status: status,\n            timestamp: t,\n          })\n        }\n      })\n      .catch((e) => {\n        console.error('ERROR')\n        console.error(e)\n        reject()\n        // setOpen(true)\n      })\n  })\n}\n","import React, { Dispatch, useState } from 'react'\nimport { List, ListItem, Modal, Paper, Typography } from '@mui/material'\n\nimport { BsFacebook, BsTwitter } from 'react-icons/bs'\nimport { BiCopyAlt } from 'react-icons/bi'\nimport { FaFileDownload } from 'react-icons/fa'\nimport { TwitterShareButton, FacebookShareButton } from 'react-share'\nimport styled from '@emotion/styled'\nimport Spacer from '../../utils/Spacer'\nimport { IconContext } from 'react-icons/lib'\n\nimport { useI18n } from '../../../utils/useI18n'\nimport { getFile } from '../../../libs/Symbol/ImageIO'\nimport {} from '../../../libs/Symbol/Apostille'\n\nexport type Props = {\n  open: boolean\n  setOpen: Dispatch<boolean>\n  txHash: string\n}\nconst baselink = 'https://inatatsu-tatsuhiro.github.io/SymbolDraw'\nconst Component: React.VFC<Props> = ({ open, setOpen, txHash }) => {\n  const { getI18nText } = useI18n()\n  const [loading, setLoading] = useState(false)\n  const copy = React.useCallback(() => {\n    navigator.clipboard.writeText(txHash)\n  }, [txHash])\n\n  const apostille = () => {\n    // setLoading(true)\n    console.log('apostille')\n    getFile(txHash).then((img) => {\n      console.log(img)\n      const buf = Buffer.from(img, 'base64')\n      const f = new File([buf.buffer], 'symbol-draw.png', {\n        type: 'image/png',\n      })\n      console.log('file', f)\n      const a = document.createElement('a')\n      a.href = img\n      a.download = f.name\n      a.click()\n      // const signer = Account.createFromPrivateKey(master, NetworkType.TEST_NET)\n      // createApostilleTransaction(f, signer)\n      //   .then((result) => {\n      //     if (!(result instanceof AggregateTransaction)) {\n      //       return\n      //     }\n\n      //     if (!result.transactionInfo) {\n      //       return\n      //     }\n      //     if (!result.transactionInfo.hash) {\n      //       return\n      //     }\n      //     console.log('result', result)\n      //     const hash = result.transactionInfo.hash\n      //     const fn = getApostilleFileName(f.name, hash)\n      //   })\n      //   .finally(() => {\n      //     setLoading(false)\n      //   })\n    })\n    // getApoFile(txHash).then((imgs) => {\n    //   console.log(imgs)\n    //   // const bufs = Buffer.from(img, 'base64')\n    //   // console.log('bufs', bufs)\n    // })\n  }\n  return (\n    <Modal open={open} onClose={() => setOpen(false)}>\n      <SPaper>\n        <Typography variant=\"h6\" component=\"div\">\n          {getI18nText('invite')}\n        </Typography>\n        <List>\n          <ListItem button>\n            <TwitterShareButton url={`${baselink}/canvas/${txHash}`}>\n              <Wrapper>\n                <IconContext.Provider value={{ size: '32px' }}>\n                  <BsTwitter />\n                </IconContext.Provider>\n                <Spacer MLeft=\"16px\">\n                  <Typography variant=\"h4\" component=\"div\">\n                    {getI18nText('share_twitter')}\n                  </Typography>\n                </Spacer>\n              </Wrapper>\n            </TwitterShareButton>\n          </ListItem>\n          <ListItem button>\n            <FacebookShareButton url={`${baselink}/canvas/${txHash}`}>\n              <Wrapper>\n                <IconContext.Provider value={{ size: '32px' }}>\n                  <BsFacebook />\n                </IconContext.Provider>\n                <Spacer MLeft=\"16px\">\n                  <Typography variant=\"h4\" component=\"div\">\n                    {getI18nText('share_facebook')}\n                  </Typography>\n                </Spacer>\n              </Wrapper>\n            </FacebookShareButton>\n          </ListItem>\n          <ListItem button>\n            <Wrapper onClick={copy}>\n              <IconContext.Provider value={{ size: '32px' }}>\n                <BiCopyAlt />\n              </IconContext.Provider>\n              <Spacer MLeft=\"16px\">\n                <Typography variant=\"h4\" component=\"div\">\n                  {getI18nText('share_clipboard')}\n                </Typography>\n              </Spacer>\n            </Wrapper>\n          </ListItem>\n          <ListItem button>\n            <Wrapper onClick={apostille}>\n              <IconContext.Provider value={{ size: '32px' }}>\n                <FaFileDownload />\n              </IconContext.Provider>\n              <Spacer MLeft=\"16px\">\n                <Typography variant=\"h4\" component=\"div\">\n                  {getI18nText('share_download')}\n                </Typography>\n              </Spacer>\n            </Wrapper>\n          </ListItem>\n        </List>\n        <Modal open={loading}>\n          <SPaper>\n            <Typography variant=\"h4\" component=\"div\">\n              Create Apostille...\n            </Typography>\n          </SPaper>\n        </Modal>\n      </SPaper>\n    </Modal>\n  )\n}\n\nexport default Component\nconst SPaper = styled(Paper)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 50vw;\n  transform: translate(-50%, -50%);\n  padding: 16px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  align-items: center;\n  margin: 4px 8px;\n`\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { Ref } from 'react'\nimport { Stage, Layer, Line, Image as KImage } from 'react-konva'\nimport { SketchPicker } from 'react-color'\nimport Konva from 'konva'\nimport styled from '@emotion/styled'\n\nimport { BsPenFill, BsPen, BsEraserFill, BsEraser } from 'react-icons/bs'\nimport { BiUndo, BiRedo } from 'react-icons/bi'\nimport { Button, IconButton, Slider, Tooltip } from '@mui/material'\nimport { FiSend } from 'react-icons/fi'\nimport Space from '../../utils/Spacer'\nimport { useI18n } from '../../../utils/useI18n'\n\nexport type Props = {\n  stageRef: Ref<Konva.Stage>\n  saveFile: () => void\n  image: HTMLImageElement\n  sharePrev: () => void\n}\n\nconst Component: React.VFC<Props> = ({\n  stageRef,\n  saveFile,\n  image,\n  sharePrev,\n}) => {\n  const [tool, setTool] = React.useState('pen')\n  const [size, setSize] = React.useState(5)\n  const [color, setColor] = React.useState('#000000')\n  const [lines, setLines] = React.useState<any[]>([])\n  const [pastLines, setPastLines] = React.useState<any[]>([])\n  const isDrawing = React.useRef(false)\n\n  const { getI18nText } = useI18n()\n\n  const marks = [\n    {\n      value: 1,\n      label: '1pt',\n    },\n    {\n      value: 3,\n      label: '3pt',\n    },\n    {\n      value: 5,\n      label: '5pt',\n    },\n    {\n      value: 10,\n      label: '10pt',\n    },\n    {\n      value: 15,\n      label: '15pt',\n    },\n    {\n      value: 20,\n      label: '20pt',\n    },\n  ]\n\n  const handleMouseDown = (e: any) => {\n    isDrawing.current = true\n    const pos = e.target.getStage().getPointerPosition()\n    setLines([\n      ...lines,\n      {\n        tool,\n        points: [pos.x, pos.y],\n        color,\n        size,\n      },\n    ])\n    setPastLines([])\n  }\n\n  const undo = () => {\n    const newLines = lines.filter((l, i) => i !== lines.length - 1)\n    setPastLines((prev) => [\n      ...prev,\n      lines.filter((l, i) => i === lines.length - 1)[0],\n    ])\n    setLines(newLines)\n  }\n\n  const redo = () => {\n    if (pastLines.length === 0) return\n    const newLines = pastLines.filter((l, i) => i !== pastLines.length - 1)\n    const addLine = pastLines[pastLines.length - 1]\n    setLines((prev) => [...prev, addLine].flat())\n    setPastLines(newLines)\n  }\n\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return\n    }\n    const stage = e.target.getStage()\n    const point = stage.getPointerPosition()\n    const lastLine = lines[lines.length - 1]\n    lastLine.points = lastLine.points.concat([point.x, point.y])\n    lines.splice(lines.length - 1, 1, lastLine)\n    setLines(lines.concat())\n  }\n  const handleChangeComplete = (color: any) => {\n    setColor(color.hex)\n  }\n  const handleMouseUp = () => {\n    isDrawing.current = false\n  }\n\n  const test = () => {\n    console.log('lines', lines)\n    console.log('pasts', pastLines)\n  }\n\n  return (\n    <>\n      <FlexDiv>\n        <FlexCol>\n          <IconButton component=\"span\" onClick={() => setTool('pen')}>\n            {tool === 'pen' ? <BsPenFill /> : <BsPen />}\n          </IconButton>\n          {tool === 'pen' ? (\n            <SBsPenFill color={color} />\n          ) : (\n            <SBsPenFill color=\"white\" />\n          )}\n        </FlexCol>\n        <FlexCol>\n          <IconButton component=\"span\" onClick={() => setTool('eraser')}>\n            {tool === 'eraser' ? <BsEraserFill /> : <BsEraser />}\n          </IconButton>\n          <SBsPenFill color=\"white\" />\n        </FlexCol>\n        <Wrap>\n          <Slider\n            aria-label=\"Custom marks\"\n            defaultValue={3}\n            valueLabelDisplay=\"auto\"\n            max={20}\n            min={1}\n            marks={marks}\n            onChange={(e: any) => setSize(e.target.value)}\n          />\n        </Wrap>\n        <FlexCol>\n          <IconButton\n            component=\"span\"\n            onClick={undo}\n            disabled={lines.length === 0}>\n            <BiUndo />\n          </IconButton>\n          <SBsPenFill color=\"white\" />\n        </FlexCol>\n        <FlexCol>\n          <IconButton\n            component=\"span\"\n            onClick={redo}\n            disabled={pastLines.length === 0}>\n            <BiRedo />\n          </IconButton>\n          <SBsPenFill color=\"white\" />\n        </FlexCol>\n      </FlexDiv>\n      <FlexDiv>\n        <StageDiv>\n          <Stage\n            width={500}\n            height={500}\n            onMouseDown={handleMouseDown}\n            onMousemove={handleMouseMove}\n            onMouseup={handleMouseUp}\n            style={{\n              border: 'solid',\n              marginTop: '10px',\n            }}\n            ref={stageRef}>\n            <Layer>\n              {image !== null && <KImage image={image} />}\n              {lines.map((line, i) => (\n                <Line\n                  key={i}\n                  points={line.points}\n                  stroke={line.color}\n                  strokeWidth={line.size}\n                  tension={0.5}\n                  lineCap=\"round\"\n                  globalCompositeOperation={\n                    line.tool === 'eraser' ? 'destination-out' : 'source-over'\n                  }\n                />\n              ))}\n            </Layer>\n          </Stage>\n        </StageDiv>\n        <CustomSketchPicker\n          color={color}\n          onChangeComplete={handleChangeComplete}\n        />\n      </FlexDiv>\n      <Wraper>\n        <Space margin=\"16px\">\n          <Tooltip title={getI18nText('tooltip_current_art')}>\n            <Button variant=\"outlined\" endIcon={<FiSend />} onClick={saveFile}>\n              Share Current Art\n            </Button>\n          </Tooltip>\n        </Space>\n        <Space margin=\"16px\">\n          <Tooltip title={getI18nText('tooltip_previous_art')}>\n            <Button variant=\"outlined\" endIcon={<FiSend />} onClick={sharePrev}>\n              Share Previous Art\n            </Button>\n          </Tooltip>\n        </Space>\n      </Wraper>\n    </>\n  )\n}\n\nexport default Component\n\nconst FlexDiv = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst FlexCol = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StageDiv = styled.div`\n  background-color: #ffffff;\n`\nconst Wrap = styled.div`\n  width: 500px;\n  margin: 0px 32px;\n`\n\nconst CustomSketchPicker = styled(SketchPicker)({\n  marginTop: '10px',\n  marginLeft: '20px',\n})\n\nconst SBsPenFill = styled('div')<{\n  color: string\n}>`\n  background: ${(props) => props.color};\n  height: 4px;\n`\n\nconst Wraper = styled('div')`\n  display: flex;\n  justify-content: center;\n`\n","import Konva from 'konva'\nimport React, { useState } from 'react'\nimport Canvas from '../../components/elements/Canvas'\n\nimport { getFile, saveFile } from '../../libs/Symbol/ImageIO'\n\nimport ShareModal from '../../components/elements/ShareModal'\nimport styled from '@emotion/styled'\nimport { Modal, Paper, Typography } from '@mui/material'\nimport { usePrikey } from '../../utils/PrikeyContext'\n\nexport interface Props {\n  hash: string\n}\n\nconst Page: React.VFC<Props> = ({ hash }) => {\n  const [image, setImage] = React.useState<HTMLImageElement>(new Image())\n  const stageRef = React.useRef<Konva.Stage | null>(null)\n\n  const [open, setOpen] = React.useState(false)\n  const [openPM, setOpenPM] = React.useState(false)\n  const [txHash, setTxHash] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n  const [error, setError] = React.useState(false)\n  const context = usePrikey()\n\n  const save = () => {\n    setLoading(true)\n    if (stageRef.current === null) return\n    if (context === undefined) return\n    const img = stageRef.current.toDataURL()\n    console.log(img)\n    saveFile(img, 'draw-chain', context.prikey, hash).then((h) => {\n      setTxHash(h)\n      setLoading(false)\n      setOpen(true)\n    })\n  }\n  const [loading, setLoading] = useState(false)\n  React.useEffect(() => {\n    if (hash === '') {\n      console.log('new game')\n      setIsLoading(false)\n      return\n    }\n    console.log('import:', hash)\n    getFile(hash)\n      .then((img) => {\n        setIsLoading(false)\n        const i = new Image()\n        i.src = img\n        setImage(i)\n      })\n      .catch(() => {\n        console.log('dame')\n        setError(true)\n      })\n  }, [hash])\n\n  if (error) {\n    return <div>NotFound This Transaction</div>\n  }\n\n  if (isLoading) {\n    return <div>GetTransaction....</div>\n  }\n\n  const sharePrev = () => {\n    setOpenPM(true)\n  }\n\n  return (\n    <div>\n      <Canvas\n        saveFile={save}\n        stageRef={stageRef}\n        image={image}\n        sharePrev={sharePrev}\n      />\n      <ShareModal open={open} setOpen={setOpen} txHash={txHash} />\n      {/* <ShareModal open={openPM} setOpen={setOpenPM} txHash={hash} /> */}\n      <Modal open={loading}>\n        <SPaper>\n          <Typography variant=\"h4\" component=\"div\">\n            Create Art...\n          </Typography>\n        </SPaper>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Page\n\nconst SPaper = styled(Paper)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 50vw;\n  transform: translate(-50%, -50%);\n  padding: 16px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n","import React from \"react\"\nimport Page from \"./Presenter\"\nimport { useParams } from \"react-router-dom\"\n\nconst Container: React.VFC = () => {\n  const { hash } = useParams()\n  return <Page hash={hash || ''}/>\n}\n\nexport default Container\n"],"sourceRoot":""}