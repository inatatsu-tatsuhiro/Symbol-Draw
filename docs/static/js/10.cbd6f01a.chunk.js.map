{"version":3,"sources":["libs/Symbol/Apostille.ts","components/elements/DropZone/index.tsx","features/audit/Presenter.tsx","features/audit/index.tsx"],"names":["apiEndpoint","getTxHash","filename","match","length","console","log","getValidStatus","r","isValid","type","audit","file","a","fileReader","fileBuf","hash","name","Promise","resolve","reject","AuditService","then","signer","apostilleAccount","status","t","JSON","parse","stringify","timestamp","split","apostilleAcount","catch","e","error","Component","setFile","useState","hover","setHover","getI18nText","useI18n","onDrop","useCallback","useDropzone","getRootProps","getInputProps","Root","onMouseEnter","onMouseLeave","SIconButton","onClick","Tooltip","title","placement","Image","src","URL","createObjectURL","alt","Text","styled","Color","default","grayscale","Page","auditData","setAuditData","context","usePrikey","useEffect","prikey","Wrapper","DropZone","Spacer","margin","TableContainer","component","Paper","Table","sx","minWidth","TableBody","TableRow","border","TableCell","align","plain","Container"],"mappings":"qMAoBMA,G,OAAc,4CA+HdC,EAAY,SAACC,GACjB,IACMC,EAAQD,EAASC,MADR,gCAEf,OAAc,OAAVA,GAAkBA,EAAMC,OAAS,GACnCC,QAAQC,IAAI,aACL,KAEPD,QAAQC,IAAI,SACLH,EAAM,KAIXI,EAAiB,SAACC,GACtB,GAAIA,EAAEC,QAAS,CACb,GAAe,IAAXD,EAAEE,KAAY,OAAO,EACzB,GAAe,IAAXF,EAAEE,KAAY,OAAO,EAE3B,OAAQ,GAGGC,EAAK,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACGC,oBAA6BF,GADhC,cACbG,EADa,OAEbC,EAAOf,EAAUW,EAAKK,MAFT,kBAGZ,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,eAAaV,MAAMI,EAASC,EAAMhB,GAC/BsB,MAAK,SAACd,GACL,GAAKA,EAAEe,QAAWf,EAAEgB,iBAIb,CACL,IAAMC,EAASlB,EAAeC,GACxBkB,EACJC,KAAKC,MAAMD,KAAKE,UAAUrB,IAAIsB,UAAUC,MAAM,KAAK,IAAM,GAC3DZ,EAAQ,CACNI,OAAQf,EAAEe,OACVS,gBAAiBxB,EAAEgB,iBACnBR,KAAMA,EACNS,OAAQA,EACRK,UAAWJ,SAXbrB,QAAQC,IAAI,SAAUE,GACtBY,OAcHa,OAAM,SAACC,GACN7B,QAAQ8B,MAAM,SACd9B,QAAQ8B,MAAMD,GACdd,WA1Ba,2CAAH,uD,wJCrHHgB,EApCqB,SAAC,GAAuB,IAArBxB,EAAoB,EAApBA,KAAMyB,EAAc,EAAdA,QAC3C,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAgBC,cAAhBD,YACFE,EAASC,uBACb,SAAChC,GACCP,QAAQC,IAAI,OAAQM,GACpByB,EAAQzB,EAAK,MAEf,CAACyB,IAEH,EAAwCQ,YAAY,CAAEF,WAA9CG,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAEtB,OAAa,OAATnC,EAEA,eAACoC,EAAD,CACEC,aAAc,kBAAMT,GAAS,IAC7BU,aAAc,kBAAMV,GAAS,IAF/B,UAGGD,GACC,cAACY,EAAD,CAAaC,QAAS,kBAAMf,EAAQ,OAApC,SACE,cAACgB,EAAA,EAAD,CAASC,MAAM,SAASC,UAAU,MAAlC,SACE,cAAC,IAAD,QAIN,cAACC,EAAD,CAAOC,IAAKC,IAAIC,gBAAgB/C,GAAOgD,IAAKhD,EAAKK,UAMrD,eAAC+B,EAAD,2BAAUF,KAAV,cACE,qCAAWC,MACX,cAACc,EAAD,UAAOpB,EAAY,6BAMnBO,EAAOc,YAAO,MAAPA,CAAH,0PAIMC,IAAMC,QAEJD,IAAME,WASlBJ,EAAOC,YAAO,MAAPA,CAAH,8DAECC,IAAME,WAGXT,EAAQM,YAAO,MAAPA,CAAH,qFAMLX,EAAcW,YAAO,MAAPA,CAAH,sOACDC,IAAMC,S,wFCiBPE,EA9ES,WACtB,MAAwB5B,mBAAsB,MAA9C,mBAAO1B,EAAP,KAAayB,EAAb,KAEA,EAAkCC,mBAA2B,MAA7D,mBAAO6B,EAAP,KAAkBC,EAAlB,KAEMC,EAAUC,cAahB,OAZAC,qBAAU,WACRlE,QAAQC,IAAI,KAAZ,OAAkB+D,QAAlB,IAAkBA,OAAlB,EAAkBA,EAASG,QACd,OAAT5D,IAGJP,QAAQC,IAAI,SACZK,YAAMC,GAAMU,MAAK,SAACd,GAChBH,QAAQC,IAAI,IAAKE,GACjB4D,EAAa5D,SAEd,CAACI,IAES,OAATA,GAA+B,OAAduD,EAEjB,8BACE,eAACM,EAAD,WACE,cAACC,EAAD,CAAU9D,KAAMA,EAAMyB,QAASA,IAC/B,cAACsC,EAAA,EAAD,CAAQC,OAAO,aAMnB,8BACE,eAACH,EAAD,WACE,cAACC,EAAD,CAAU9D,KAAMA,EAAMyB,QAASA,IAC/B,cAACsC,EAAA,EAAD,CAAQC,OAAO,OAAf,SACE,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,cAACC,EAAA,EAAD,CAAOC,GAAI,CAAEC,SAAU,KAAO,aAAW,eAAzC,SACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEH,GAAI,CACF,mCAAoC,CAAEI,OAAQ,IAFlD,UAIE,cAACC,EAAA,EAAD,CAAWC,MAAM,QAAjB,8BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACGpB,EAAUnC,gBAAgBwD,aAG/B,eAACJ,EAAA,EAAD,CACEH,GAAI,CACF,mCAAoC,CAAEI,OAAQ,IAFlD,UAIE,cAACC,EAAA,EAAD,CAAWC,MAAM,QAAjB,2BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACGpB,EAAU5C,OAAOiE,aAGtB,eAACJ,EAAA,EAAD,CACEH,GAAI,CACF,mCAAoC,CAAEI,OAAQ,IAFlD,UAIE,cAACC,EAAA,EAAD,CAAWC,MAAM,QAAjB,6BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BpB,EAAUnD,UAEtC,eAACoE,EAAA,EAAD,CACEH,GAAI,CACF,mCAAoC,CAAEI,OAAQ,IAFlD,UAIE,cAACC,EAAA,EAAD,CAAWC,MAAM,QAAjB,uBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BpB,EAAUrC,8BAclD2C,EAAUX,YAAO,MAAPA,CAAH,8CC3FE2B,UAJc,WAC3B,OAAO,cAAC,EAAD","file":"static/js/10.cbd6f01a.chunk.js","sourcesContent":["import { format } from 'date-fns'\n// import config from 'utils/config/SymbolConfig'\nimport * as fileReader from 'promise-file-reader'\nimport {\n  ApostilleTransaction,\n  AuditService,\n  HashFunctionCreator,\n  HashingType,\n  IApostilleOptions,\n  IAuditResult,\n  IPartialTxAuditResult,\n} from 'simple-apostille-v2'\nimport {\n  Account,\n  SignedTransaction,\n  RepositoryFactoryHttp,\n  TransactionService,\n  Address,\n} from 'symbol-sdk'\n\nconst apiEndpoint = 'https://sym-test-01.opening-line.jp:3001' //config.SYMBOL_API_ENDPOINT\nconst generationHash =\n  '7FCCD304802016BEBBCD342A332F91FF1F3BB5E902988B352697BE245F48E836' //config.GENERATION_HASH_SEED\nconst feeMultiplier = 200 //config.FEE_MULTIPLIER\nconst epochAdjustment = 1637848847 //config.EPOCH_ADJUSTMENT\nconst networkType = 152 //config.NETWORK_TYPE\n\nexport type AuditData = {\n  signer: Address\n  apostilleAcount: Address\n  hash: string\n  status: number\n  timestamp: string\n}\n\nexport const getApostilleFileName = (\n  fileName: string,\n  txHash: string\n): string => {\n  const date = format(new Date(), 'yyyy-MM-dd')\n  const [fn, ext] = fileName.split('.')\n  const apostilleFileName = `${fn} -- Apostille TX ${txHash} -- ${date}.${ext}`\n  return apostilleFileName\n}\n\nexport const getFileHash = async (file: File): Promise<string> => {\n  const fileBuffer = await fileReader.readAsArrayBuffer(file)\n  const hashFunc = HashFunctionCreator.create(HashingType.Type.sha256)\n  return hashFunc.hashing(fileBuffer)\n}\n\nconst createAnnounceInfo = async (\n  hashedData: string,\n  fileName: string,\n  signer: Account\n) => {\n  const salt = String(new Date().getTime())\n  const apostilleTx = ApostilleTransaction.createFromHashedData(\n    hashedData,\n    HashingType.Type.sha256,\n    salt + fileName,\n    signer,\n    networkType,\n    generationHash,\n    feeMultiplier,\n    apiEndpoint,\n    epochAdjustment\n  )\n\n  return await apostilleTx.singedTransactionAndAnnounceType()\n}\n\nexport const createApostilleTransaction = async (\n  file: File,\n  signer: Account\n): Promise<unknown> => {\n  if (file === null || signer === null) return\n  try {\n    const fileHash = await getFileHash(file)\n    const announceInfo = await createAnnounceInfo(fileHash, file.name, signer)\n    if (announceInfo) {\n      return announceTransactionByComplete(announceInfo.signedTransaction)\n    }\n  } catch (err) {\n    console.log('err:', err)\n    return err\n  }\n}\n\nconst createRepositoryFactory = () => {\n  return new RepositoryFactoryHttp(apiEndpoint, {\n    generationHash,\n    networkType,\n    websocketUrl: `${apiEndpoint.replace('http', 'ws')}/ws`,\n    websocketInjected: WebSocket,\n  })\n}\nconst createTransactionService = () => {\n  const repositoryFactory = createRepositoryFactory()\n  return new TransactionService(\n    repositoryFactory.createTransactionRepository(),\n    repositoryFactory.createReceiptRepository()\n  )\n}\n\nconst createListener = () => {\n  const repositoryFactory = createRepositoryFactory()\n  return repositoryFactory.createListener()\n}\n\nconst announceTransactionByComplete = async (signedTx: SignedTransaction) => {\n  return new Promise((resolve, reject) => {\n    const transactionService = createTransactionService()\n    const listener = createListener()\n\n    if (transactionService && listener) {\n      listener\n        .open()\n        .then(() => {\n          transactionService.announce(signedTx, listener).subscribe(\n            (x) => {\n              listener.close()\n              console.log('complate')\n              resolve(x)\n            },\n            (err) => {\n              listener.close()\n              console.log('err:', err)\n              reject(err)\n            }\n          )\n        })\n        .catch((err) => {\n          console.log('err:', err)\n          reject(err)\n        })\n    }\n  })\n}\nconst createOption = (title: string): IApostilleOptions => {\n  return {\n    metadata: {\n      title: title,\n    },\n  }\n}\n\nconst getTxHash = (filename: string): string => {\n  const regexp = /--\\sApostille\\sTX\\s(\\w+)\\s--/\n  const match = filename.match(regexp)\n  if (match === null || match.length < 1) {\n    console.log('not match')\n    return ''\n  } else {\n    console.log('match')\n    return match[1]\n  }\n}\n\nconst getValidStatus = (r: IAuditResult | IPartialTxAuditResult): number => {\n  if (r.isValid) {\n    if (r.type === 0) return 0\n    if (r.type === 1) return 1\n  }\n  return -1\n}\n\nexport const audit = async (file: File): Promise<AuditData> => {\n  const fileBuf = await fileReader.readAsArrayBuffer(file)\n  const hash = getTxHash(file.name)\n  return new Promise((resolve, reject) => {\n    AuditService.audit(fileBuf, hash, apiEndpoint)\n      .then((r) => {\n        if (!r.signer || !r.apostilleAccount) {\n          // setOpen(true)\n          console.log('reject', r)\n          reject()\n        } else {\n          const status = getValidStatus(r)\n          const t: string =\n            JSON.parse(JSON.stringify(r)).timestamp.split('.')[0] || ''\n          resolve({\n            signer: r.signer,\n            apostilleAcount: r.apostilleAccount,\n            hash: hash,\n            status: status,\n            timestamp: t,\n          })\n        }\n      })\n      .catch((e) => {\n        console.error('ERROR')\n        console.error(e)\n        reject()\n        // setOpen(true)\n      })\n  })\n}\n","import React, { useCallback, useState } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport styled from '@emotion/styled'\nimport { MdOutlineDeleteForever } from 'react-icons/md'\nimport Color from '../../../utils/Color'\nimport { Tooltip } from '@mui/material'\n\nimport { useI18n } from '../../../utils/useI18n'\n\nexport interface Props {\n  file: File | null\n  setFile: (file: File | null) => void\n}\n\nconst Component: React.VFC<Props> = ({ file, setFile }) => {\n  const [hover, setHover] = useState(false)\n  const { getI18nText } = useI18n()\n  const onDrop = useCallback(\n    (file) => {\n      console.log('file', file)\n      setFile(file[0])\n    },\n    [setFile]\n  )\n  const { getRootProps, getInputProps } = useDropzone({ onDrop })\n\n  if (file !== null) {\n    return (\n      <Root\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}>\n        {hover && (\n          <SIconButton onClick={() => setFile(null)}>\n            <Tooltip title=\"Delete\" placement=\"top\">\n              <MdOutlineDeleteForever />\n            </Tooltip>\n          </SIconButton>\n        )}\n        <Image src={URL.createObjectURL(file)} alt={file.name} />\n      </Root>\n    )\n  }\n\n  return (\n    <Root {...getRootProps()}>\n      <input {...getInputProps()} />\n      <Text>{getI18nText('component_dropzone')}</Text>\n    </Root>\n  )\n}\nexport default Component\n\nconst Root = styled('div')`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  background: ${Color.default};\n\n  border: solid ${Color.grayscale} 1px;\n  border-radius: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  text-align: center;\n`\n\nconst Text = styled('div')`\n  font-size: 24px;\n  color: ${Color.grayscale};\n`\n\nconst Image = styled('img')`\n  object-fit: contain;\n  width: 100%;\n  height: 100%;\n`\n\nconst SIconButton = styled('div')`\n  background: ${Color.default};\n  position: absolute;\n  width: 32px;\n  height: 32px;\n  top: 16px;\n  right: 16px;\n\n  display: flex;\n  border-radius: 100px;\n  justify-content: center;\n  align-items: center;\n`\n","import React, { useEffect, useState } from 'react'\nimport DropZone from '../../components/elements/DropZone'\nimport styled from '@emotion/styled'\n\nimport { audit, AuditData } from '../../libs/Symbol/Apostille'\n// import Button from '../../components/elements/Button'\n// import { useI18n } from '../../utils/useI18n'\nimport Spacer from '../../components/utils/Spacer'\nimport {\n  TableContainer,\n  Paper,\n  Table,\n  TableRow,\n  TableCell,\n  TableBody,\n} from '@mui/material'\nimport { usePrikey } from '../../utils/PrikeyContext'\n\nconst Page: React.VFC = () => {\n  const [file, setFile] = useState<File | null>(null)\n  // const { getI18nText } = useI18n()\n  const [auditData, setAuditData] = useState<AuditData | null>(null)\n\n  const context = usePrikey()\n  useEffect(() => {\n    console.log('pk', context?.prikey)\n    if (file === null) {\n      return\n    }\n    console.log('audit')\n    audit(file).then((r) => {\n      console.log('r', r)\n      setAuditData(r)\n    })\n  }, [file])\n\n  if (file === null || auditData === null) {\n    return (\n      <div>\n        <Wrapper>\n          <DropZone file={file} setFile={setFile} />\n          <Spacer margin=\"8px\"></Spacer>\n        </Wrapper>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <Wrapper>\n          <DropZone file={file} setFile={setFile} />\n          <Spacer margin=\"16px\">\n            <TableContainer component={Paper}>\n              <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableBody>\n                  <TableRow\n                    sx={{\n                      '&:last-child td, &:last-child th': { border: 0 },\n                    }}>\n                    <TableCell align=\"right\">ApostilleAccount</TableCell>\n                    <TableCell align=\"right\">\n                      {auditData.apostilleAcount.plain()}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow\n                    sx={{\n                      '&:last-child td, &:last-child th': { border: 0 },\n                    }}>\n                    <TableCell align=\"right\">SignerAccount</TableCell>\n                    <TableCell align=\"right\">\n                      {auditData.signer.plain()}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow\n                    sx={{\n                      '&:last-child td, &:last-child th': { border: 0 },\n                    }}>\n                    <TableCell align=\"right\">TransactionHash</TableCell>\n                    <TableCell align=\"right\">{auditData.hash}</TableCell>\n                  </TableRow>\n                  <TableRow\n                    sx={{\n                      '&:last-child td, &:last-child th': { border: 0 },\n                    }}>\n                    <TableCell align=\"right\">TimeStamp</TableCell>\n                    <TableCell align=\"right\">{auditData.timestamp}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Spacer>\n        </Wrapper>\n      </div>\n    )\n  }\n}\n\nexport default Page\n\nconst Wrapper = styled('div')`\n  height: 400px;\n`\n","import React from 'react'\nimport Page from './Presenter'\n\nconst Container: React.VFC = () => {\n  return <Page />\n}\n\nexport default Container\n"],"sourceRoot":""}