{"version":3,"sources":["../node_modules/@mui/material/styles/useTheme.js","components/elements/Button/index.tsx","components/elements/TextField/index.tsx","components/utils/Centering/index.tsx","../node_modules/@mui/material/transitions/utils.js","../node_modules/@mui/base/Portal/Portal.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","features/home/Presenter.tsx","features/home/index.tsx"],"names":["useTheme","useThemeSystem","defaultTheme","Component","text","onClick","fill","FButton","variant","SButton","styled","Button","Color","accent","sky","addAlpha","inputRef","args","fullWidth","htmlFor","label","direction","nowrap","vertical","holizontal","width","height","items","children","Style","wrap","props","reflow","node","scrollTop","getTransitionProps","options","_style$transitionDura","_style$transitionTimi","timeout","easing","style","duration","transitionDuration","mode","transitionTimingFunction","delay","transitionDelay","Portal","React","ref","container","disablePortal","mountNode","setMountNode","handleRef","useForkRef","useEnhancedEffect","getContainer","document","body","setRef","ReactDOM","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","findDOMNode","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","current","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","childProps","_objectWithoutPropertiesLoose","createElement","TransitionGroupContext","Provider","value","cloneElement","Children","only","noop","contextType","propTypes","defaultProps","Page","openCanvasWithHash","openCanvas","useI18n","getI18nText","useState","open","setOpen","Centering","Spacer","margin","Typography","component","Wrapper","ButtonArea","Modal","onClose","ModalContent","TFWrapper","TextField","background","padding","display","justifyContent","alignItems","flexDirection","position","top","left","transform","Container","navi","useNavigate","useRef","usePrikey"],"mappings":"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","file":"static/js/8.988ef7f4.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","import React from 'react'\nimport styled from '@emotion/styled'\n\nimport { Button } from '@mui/material'\nimport Color, { addAlpha } from '../../../utils/Color'\n\nexport interface Props {\n  text: string\n  onClick: () => void\n  fill?: boolean\n}\n\nconst Component: React.VFC<Props> = ({ text, onClick, fill = false }) => {\n  if (fill) {\n    return (\n      <FButton variant=\"outlined\" onClick={onClick}>\n        {text}\n      </FButton>\n    )\n  }\n\n  return (\n    <SButton variant=\"outlined\" onClick={onClick}>\n      {text}\n    </SButton>\n  )\n}\n\nexport default Component\n\nconst FButton = styled(Button)`\n  color: white !important;\n  background: ${Color.accent.sky} !important;\n  border-color: ${Color.accent.sky} !important;\n  font-weight: 700;\n`\nconst SButton = styled(Button)`\n  color: ${Color.accent.sky} !important;\n  border-color: ${Color.accent.sky} !important;\n\n  :hover {\n    border-color: ${Color.accent.sky} !important;\n    background-color: ${addAlpha(Color.accent.sky, 0.04)} !important;\n  }\n`\n","import OutlinedInput from '@mui/material/OutlinedInput'\nimport FormControl from '@mui/material/FormControl'\nimport InputLabel from '@mui/material/InputLabel'\nimport React, { Ref } from 'react'\n\nexport type Props = {\n  inputRef: Ref<HTMLInputElement>\n  text: string\n}\n\nconst Component: React.VFC<Props> = ({ inputRef, text, ...args }) => {\n  return (\n    <FormControl fullWidth>\n      <InputLabel htmlFor=\"outlined-adornment-password\">{text}</InputLabel>\n      <OutlinedInput {...args} fullWidth label={text} inputRef={inputRef} />\n    </FormControl>\n  )\n}\n\nexport default Component\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nexport type CenteringProps = {\n  direction?: string\n  nowrap?: boolean\n  vertical?: string\n  holizontal?: string\n  width?: string\n  height?: string\n  items?: string\n  children?: React.ReactNode\n}\n\nconst Component: React.VFC<CenteringProps> = ({\n  direction = 'row',\n  nowrap = false,\n  vertical = 'center',\n  holizontal = 'center',\n  width = '100%',\n  height = '100%',\n  items = 'normal',\n  children,\n}) => {\n  return (\n    <Style\n      direction={direction}\n      holizontal={holizontal}\n      vertical={vertical}\n      width={width}\n      height={height}\n      items={items}\n      wrap={nowrap ? 'nowrap' : 'wrap'}>\n      {children}\n    </Style>\n  )\n}\nexport default Component\n\nconst Style = styled('div')<{\n  direction: string\n  wrap: string\n  vertical: string\n  holizontal: string\n  width: string\n  height: string\n  items: string\n}>`\n  display: flex;\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  flex-direction: ${(props) => props.direction};\n  ${(props) => props.wrap && 'flex-wrap: wrap'};\n  justify-content: ${(props) => props.holizontal};\n  align-content: ${(props) => props.vertical};\n  align-items: ${(props) => props.items};\n`\n","export const reflow = node => node.scrollTop;\nexport function getTransitionProps(props, options) {\n  var _style$transitionDura, _style$transitionTimi;\n\n  const {\n    timeout,\n    easing,\n    style = {}\n  } = props;\n  return {\n    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === 'object' ? easing[options.mode] : easing,\n    delay: style.transitionDelay\n  };\n}","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useForkRef as useForkRef, unstable_setRef as setRef } from '@mui/utils';\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\n\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, ref) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  const handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, ref);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return () => {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n\n    return children;\n  }\n\n  return mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import { Box, Modal, Typography } from '@mui/material'\nimport React, { Ref, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport Button from '../../components/elements/Button'\nimport TextField from '../../components/elements/TextField'\nimport Centering from '../../components/utils/Centering'\nimport Spacer from '../../components/utils/Spacer'\nimport { useI18n } from '../../utils/useI18n'\n\nexport type Props = {\n  inputRef: Ref<HTMLInputElement>\n  openCanvasWithHash: () => void\n  openCanvas: () => void\n}\n\nconst Page: React.VFC<Props> = ({\n  inputRef,\n  openCanvasWithHash,\n  openCanvas,\n}) => {\n  const { getI18nText } = useI18n()\n  const [open, setOpen] = useState(false)\n\n  const closeModal = () => {\n    setOpen(false)\n  }\n\n  return (\n    <Centering direction=\"column\" holizontal=\"start\">\n      <Spacer margin=\"8px\">\n        <Typography variant=\"h4\" component=\"div\">\n          Art Chain\n        </Typography>\n      </Spacer>\n      <Wrapper>\n        <Spacer margin=\"8px\">\n          <ButtonArea onClick={openCanvas}>\n            <Typography variant=\"h3\" component=\"div\">\n              NewGame\n            </Typography>\n          </ButtonArea>\n        </Spacer>\n        <Spacer margin=\"8px\">\n          <ButtonArea onClick={() => setOpen(true)}>\n            <Typography variant=\"h3\" component=\"div\">\n              Continue\n            </Typography>\n          </ButtonArea>\n        </Spacer>\n        <Modal open={open} onClose={closeModal}>\n          <ModalContent>\n            <Typography variant=\"h5\" component=\"div\">\n              Continue Transaction Hash\n            </Typography>\n            <TFWrapper>\n              <Spacer margin=\"32px\">\n                <TextField text=\"TransactionHash\" inputRef={inputRef} />\n              </Spacer>\n            </TFWrapper>\n            <Button text={'start'} onClick={openCanvasWithHash}></Button>\n          </ModalContent>\n        </Modal>\n      </Wrapper>\n    </Centering>\n  )\n}\n\nexport default Page\n\nconst Wrapper = styled('div')`\n  display: flex;\n  justify-content: center;\n`\n\nconst ButtonArea = styled('div')({\n  width: '16vw',\n  height: '9vw',\n  background: '#dedede',\n  margin: '64px 5vw',\n  padding: '16px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n})\n\nconst ModalContent = styled('div')({\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  width: '50vw',\n  transform: 'translate(-50%, -50%)',\n  padding: '16px',\n\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  background: 'white',\n})\n\nconst TFWrapper = styled('div')({\n  width: '100%',\n})\n","import React, { useRef } from 'react'\n\nimport { useNavigate } from 'react-router-dom'\nimport { usePrikey } from '../../utils/PrikeyContext'\n\nimport Page from './Presenter'\n\nconst Container: React.VFC = () => {\n  const navi = useNavigate()\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const pkRef = useRef<HTMLInputElement>(null)\n\n  const context = usePrikey()\n  const setKey = () => {\n    if (!context || pkRef === null || pkRef.current === null) return\n\n    context.setPrikey(pkRef.current.value)\n  }\n\n  const openCanvasWithHash = () => {\n    if (inputRef.current === null) return\n    navi(`/canvas/${inputRef.current.value}`)\n  }\n  const openCanvas = () => {\n    navi(`/canvas`)\n  }\n  return (\n    <Page\n      inputRef={inputRef}\n      openCanvasWithHash={openCanvasWithHash}\n      openCanvas={openCanvas}\n    />\n  )\n}\n\nexport default Container\n"],"sourceRoot":""}