{"version":3,"sources":["components/elements/ShareModal/index.tsx","components/elements/Canvas/index.tsx","features/draw/Presenter.tsx","features/draw/index.tsx","libs/Symbol/ImageIO.ts"],"names":["baselink","Component","open","setOpen","txHash","getI18nText","useI18n","copy","React","useCallback","navigator","clipboard","writeText","onClose","SPaper","variant","component","button","url","Wrapper","Provider","value","size","MLeft","onClick","console","log","getApostilleFile","then","imgs","bufs","split","map","img","Buffer","from","styled","Paper","stageRef","saveFile","image","useState","tool","setTool","setSize","color","setColor","lines","setLines","isDrawing","useRef","FlexDiv","FlexCol","IconButton","SBsPenFill","Wrap","Slider","defaultValue","valueLabelDisplay","max","min","marks","label","onChange","e","target","Button","endIcon","StageDiv","width","height","onMouseDown","current","pos","getStage","getPointerPosition","points","x","y","onMousemove","point","lastLine","length","concat","splice","onMouseup","style","border","marginTop","ref","line","i","stroke","strokeWidth","tension","lineCap","globalCompositeOperation","CustomSketchPicker","onChangeComplete","hex","div","SketchPicker","marginLeft","props","Page","hash","Image","setImage","setTxHash","isLoading","setIsLoading","error","setError","useEffect","getFile","src","catch","Canvas","toDataURL","h","ShareModal","Container","useParams","G_HASH","NODE","EPOCH","a","Promise","resolve","reject","checkConfirmed","tx","TransferTransaction","JSON","parse","message","payload","data","innerTxJoin","timer","setInterval","checkUnConfirmed","setTimeout","clearInterval","previousHash","join","transactionHttp","RepositoryFactoryHttp","createTransactionRepository","res","rej","getTransaction","TransactionGroup","Unconfirmed","toPromise","Confirmed","repositoryFactory","agtx","innerTxs","innerTransactions","inTx","base64img","gameMode","signer","Account","createFromPrivateKey","NetworkType","TEST_NET","acc","Address","createFromRawAddress","array","MSG_SIZE","Math","floor","arr","slice","push","txs","agtxs","hashes","create","Deadline","PlainMessage","toAggregate","publicAccount","AggregateTransaction","createComplete","UInt64","fromUint","signedTx","sign","announce","subscribe","err","stringify","version","name","mode","substr","st"],"mappings":"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","file":"static/js/10.f567e350.chunk.js","sourcesContent":["import { List, ListItem, Modal, Paper, Typography } from '@mui/material'\n\nimport { BsFacebook, BsTwitter } from 'react-icons/bs'\nimport { BiCopyAlt } from 'react-icons/bi'\nimport { FaFileDownload } from 'react-icons/fa'\nimport { TwitterShareButton, FacebookShareButton } from 'react-share'\nimport styled from '@emotion/styled'\nimport React, { Dispatch } from 'react'\nimport Spacer from '../../utils/Spacer'\nimport { IconContext } from 'react-icons/lib'\n\nimport { useI18n } from '../../../utils/useI18n'\nimport { getApostilleFile } from '../../../libs/Symbol/ImageIO'\n\nexport type Props = {\n  open: boolean\n  setOpen: Dispatch<boolean>\n  txHash: string\n}\nconst baselink = 'http://localhost'\nconst Component: React.VFC<Props> = ({ open, setOpen, txHash }) => {\n  const { getI18nText } = useI18n()\n\n  const copy = React.useCallback(() => {\n    navigator.clipboard.writeText(`${baselink}/canvas/${txHash}`)\n  }, [txHash])\n\n  const apostille = () => {\n    console.log('apostille')\n    getApostilleFile(txHash).then((imgs) => {\n      const bufs = imgs.split(',').map((img) => Buffer.from(img, 'base64'))\n      console.log('bufs', bufs)\n    })\n  }\n  return (\n    <Modal open={open} onClose={() => setOpen(false)}>\n      <SPaper>\n        <Typography variant=\"h6\" component=\"div\">\n          {getI18nText('invite')}\n        </Typography>\n        <List>\n          <ListItem button>\n            <TwitterShareButton url={`${baselink}/canvas/${txHash}`}>\n              <Wrapper>\n                <IconContext.Provider value={{ size: '32px' }}>\n                  <BsTwitter />\n                </IconContext.Provider>\n                <Spacer MLeft=\"16px\">\n                  <Typography variant=\"h4\" component=\"div\">\n                    {getI18nText('share_twitter')}\n                  </Typography>\n                </Spacer>\n              </Wrapper>\n            </TwitterShareButton>\n          </ListItem>\n          <ListItem button>\n            <FacebookShareButton url={`${baselink}/canvas/${txHash}`}>\n              <Wrapper>\n                <IconContext.Provider value={{ size: '32px' }}>\n                  <BsFacebook />\n                </IconContext.Provider>\n                <Spacer MLeft=\"16px\">\n                  <Typography variant=\"h4\" component=\"div\">\n                    {getI18nText('share_facebook')}\n                  </Typography>\n                </Spacer>\n              </Wrapper>\n            </FacebookShareButton>\n          </ListItem>\n          <ListItem button>\n            <Wrapper onClick={copy}>\n              <IconContext.Provider value={{ size: '32px' }}>\n                <BiCopyAlt />\n              </IconContext.Provider>\n              <Spacer MLeft=\"16px\">\n                <Typography variant=\"h4\" component=\"div\">\n                  {getI18nText('share_clipboard')}\n                </Typography>\n              </Spacer>\n            </Wrapper>\n          </ListItem>\n          <ListItem button>\n            <Wrapper onClick={apostille}>\n              <IconContext.Provider value={{ size: '32px' }}>\n                <FaFileDownload />\n              </IconContext.Provider>\n              <Spacer MLeft=\"16px\">\n                <Typography variant=\"h4\" component=\"div\">\n                  {getI18nText('share_download')}\n                </Typography>\n              </Spacer>\n            </Wrapper>\n          </ListItem>\n        </List>\n      </SPaper>\n    </Modal>\n  )\n}\n\nexport default Component\nconst SPaper = styled(Paper)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 50vw;\n  transform: translate(-50%, -50%);\n  padding: 16px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  align-items: center;\n  margin: 4px 8px;\n`\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { Ref } from 'react'\nimport { Stage, Layer, Line, Image as KImage } from 'react-konva'\nimport { SketchPicker } from 'react-color'\nimport Konva from 'konva'\nimport styled from '@emotion/styled'\n\nimport { BsPenFill, BsPen, BsEraserFill, BsEraser } from 'react-icons/bs'\nimport { Button, IconButton, Slider } from '@mui/material'\nimport { FiSend } from 'react-icons/fi'\n\nexport type Props = {\n  stageRef: Ref<Konva.Stage>\n  saveFile: () => void\n  image: HTMLImageElement\n}\n\nconst Component: React.VFC<Props> = ({ stageRef, saveFile, image }) => {\n  const [tool, setTool] = React.useState('pen')\n  const [size, setSize] = React.useState(5)\n  const [color, setColor] = React.useState('#000000')\n  const [lines, setLines] = React.useState<any[]>([])\n  const isDrawing = React.useRef(false)\n\n  const marks = [\n    {\n      value: 1,\n      label: '1pt',\n    },\n    {\n      value: 3,\n      label: '3pt',\n    },\n    {\n      value: 5,\n      label: '5pt',\n    },\n    {\n      value: 10,\n      label: '10pt',\n    },\n    {\n      value: 15,\n      label: '15pt',\n    },\n    {\n      value: 20,\n      label: '20pt',\n    },\n  ]\n\n  const handleMouseDown = (e: any) => {\n    isDrawing.current = true\n    const pos = e.target.getStage().getPointerPosition()\n    setLines([\n      ...lines,\n      {\n        tool,\n        points: [pos.x, pos.y],\n        color,\n        size,\n      },\n    ])\n  }\n\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return\n    }\n    const stage = e.target.getStage()\n    const point = stage.getPointerPosition()\n    const lastLine = lines[lines.length - 1]\n    lastLine.points = lastLine.points.concat([point.x, point.y])\n    lines.splice(lines.length - 1, 1, lastLine)\n    setLines(lines.concat())\n  }\n  const handleChangeComplete = (color: any) => {\n    setColor(color.hex)\n  }\n  const handleMouseUp = () => {\n    isDrawing.current = false\n  }\n  return (\n    <>\n      <FlexDiv>\n        <FlexCol>\n          <IconButton component=\"span\" onClick={() => setTool('pen')}>\n            {tool === 'pen' ? <BsPenFill /> : <BsPen />}\n          </IconButton>\n          {tool === 'pen' ? (\n            <SBsPenFill color={color} />\n          ) : (\n            <SBsPenFill color=\"white\" />\n          )}\n        </FlexCol>\n        <FlexCol>\n          <IconButton component=\"span\" onClick={() => setTool('eraser')}>\n            {tool === 'eraser' ? <BsEraserFill /> : <BsEraser />}\n          </IconButton>\n          <SBsPenFill color=\"white\" />\n        </FlexCol>\n        <Wrap>\n          <Slider\n            aria-label=\"Custom marks\"\n            defaultValue={3}\n            valueLabelDisplay=\"auto\"\n            max={20}\n            min={1}\n            marks={marks}\n            onChange={(e: any) => setSize(e.target.value)}\n          />\n        </Wrap>\n        <Button variant=\"outlined\" endIcon={<FiSend />} onClick={saveFile}>\n          Send\n        </Button>\n      </FlexDiv>\n      <FlexDiv>\n        <StageDiv>\n          <Stage\n            width={500}\n            height={500}\n            onMouseDown={handleMouseDown}\n            onMousemove={handleMouseMove}\n            onMouseup={handleMouseUp}\n            style={{\n              border: 'solid',\n              marginTop: '10px',\n            }}\n            ref={stageRef}>\n            <Layer>\n              {image !== null && <KImage image={image} />}\n              {lines.map((line, i) => (\n                <Line\n                  key={i}\n                  points={line.points}\n                  stroke={line.color}\n                  strokeWidth={line.size}\n                  tension={0.5}\n                  lineCap=\"round\"\n                  globalCompositeOperation={\n                    line.tool === 'eraser' ? 'destination-out' : 'source-over'\n                  }\n                />\n              ))}\n            </Layer>\n          </Stage>\n        </StageDiv>\n        <CustomSketchPicker\n          color={color}\n          onChangeComplete={handleChangeComplete}\n        />\n      </FlexDiv>\n    </>\n  )\n}\n\nexport default Component\n\nconst FlexDiv = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst Right = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`\nconst FlexCol = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StageDiv = styled.div`\n  background-color: #ffffff;\n`\nconst Wrap = styled.div`\n  width: 500px;\n  margin: 0px 32px;\n`\n\nconst CustomSketchPicker = styled(SketchPicker)({\n  marginTop: '10px',\n  marginLeft: '20px',\n})\n\nconst SBsPenFill = styled('div')<{\n  color: string\n}>`\n  background: ${(props) => props.color};\n  height: 4px;\n`\n","import Konva from 'konva'\nimport React from 'react'\nimport Canvas from '../../components/elements/Canvas'\n\nimport { getFile, saveFile } from '../../libs/Symbol/ImageIO'\n\nimport ShareModal from '../../components/elements/ShareModal'\n\nexport interface Props {\n  hash: string\n}\n\nconst Page: React.VFC<Props> = ({ hash }) => {\n  const [image, setImage] = React.useState<HTMLImageElement>(new Image())\n  const stageRef = React.useRef<Konva.Stage | null>(null)\n\n  const [open, setOpen] = React.useState(false)\n  const [txHash, setTxHash] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n  const [error, setError] = React.useState(false)\n\n  const save = () => {\n    if (stageRef.current === null) return\n    const img = stageRef.current.toDataURL()\n    console.log(img)\n    saveFile(img, 'draw-chain', hash).then((h) => setTxHash(h))\n    setOpen(true)\n  }\n  React.useEffect(() => {\n    if (hash === '') {\n      console.log('new game')\n      setIsLoading(false)\n      return\n    }\n    console.log('import:', hash)\n    getFile(hash)\n      .then((img) => {\n        setIsLoading(false)\n        const i = new Image()\n        i.src = img\n        setImage(i)\n      })\n      .catch(() => {\n        console.log('dame')\n        setError(true)\n      })\n  }, [hash])\n\n  if (error) {\n    return <div>NotFound This Transaction</div>\n  }\n\n  if (isLoading) {\n    return <div>GetTransaction....</div>\n  }\n\n  return (\n    <div>\n      <Canvas saveFile={save} stageRef={stageRef} image={image} />\n      <ShareModal open={open} setOpen={setOpen} txHash={txHash} />\n    </div>\n  )\n}\n\nexport default Page\n","import React from \"react\"\nimport Page from \"./Presenter\"\nimport { useParams } from \"react-router-dom\"\n\nconst Container: React.VFC = () => {\n  const { hash } = useParams()\n  return <Page hash={hash || ''}/>\n}\n\nexport default Container\n","import {\n  Account,\n  AggregateTransaction,\n  Deadline,\n  NetworkType,\n  TransferTransaction,\n  UInt64,\n  RepositoryFactoryHttp,\n  PlainMessage,\n  TransactionGroup,\n  Transaction,\n  Address,\n} from 'symbol-sdk'\n\nconst G_HASH =\n  '7FCCD304802016BEBBCD342A332F91FF1F3BB5E902988B352697BE245F48E836'\nconst NODE = 'https://sym-test-01.opening-line.jp:3001'\nconst EPOCH = 1637848847\n\nconst master =\n  '891D9D7E9672925123CFB7766CE9AC740BAFED43AE78F64CE2D296F54E62E57A'\n\nexport const getFile = async (hash: string): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    checkConfirmed(hash)\n      .then((tx) => {\n        if (tx instanceof TransferTransaction) {\n          const h: string = JSON.parse(tx.message.payload).data\n          resolve(innerTxJoin(h))\n        }\n      })\n      .catch(() => {\n        const timer = setInterval(() => {\n          checkUnConfirmed(hash)\n            .then(() => {\n              setTimeout(() => {\n                checkConfirmed(hash)\n                  .then((tx) => {\n                    clearInterval(timer)\n                    if (tx instanceof TransferTransaction) {\n                      const h: string = JSON.parse(tx.message.payload).data\n                      resolve(innerTxJoin(h))\n                    }\n                  })\n                  .catch(() => {\n                    reject('404')\n                  })\n              }, 1000)\n            })\n            .catch(() => {\n              console.log('loading')\n            })\n        }, 1000)\n      })\n  })\n}\nexport const getApostilleFile = async (hash: string): Promise<string> => {\n  const arr = []\n\n  new Promise((resolve, reject) => {\n    checkConfirmed(hash).then((tx) => {\n      if (tx instanceof TransferTransaction) {\n        console.log('data', JSON.parse(tx.message.payload))\n      }\n    })\n  })\n  return new Promise((resolve, reject) => {\n    checkConfirmed(hash)\n      .then((tx) => {\n        if (tx instanceof TransferTransaction) {\n          const h: string = JSON.parse(tx.message.payload).data\n          console.log(\n            'previous hash',\n            JSON.parse(tx.message.payload).previousHash\n          )\n          resolve([innerTxJoin(h), innerTxJoin(h)].join(','))\n        }\n      })\n      .catch(() => {\n        const timer = setInterval(() => {\n          checkUnConfirmed(hash)\n            .then(() => {\n              setTimeout(() => {\n                checkConfirmed(hash)\n                  .then((tx) => {\n                    clearInterval(timer)\n                    if (tx instanceof TransferTransaction) {\n                      const h: string = JSON.parse(tx.message.payload).data\n                      resolve([innerTxJoin(h), innerTxJoin(h)].join(','))\n                    }\n                  })\n                  .catch(() => {\n                    reject('404')\n                  })\n              }, 1000)\n            })\n            .catch(() => {\n              console.log('loading')\n            })\n        }, 1000)\n      })\n  })\n}\n\nconst checkUnConfirmed = (hash: string): Promise<void> => {\n  const repositoryFactory = new RepositoryFactoryHttp(NODE)\n  const transactionHttp = repositoryFactory.createTransactionRepository()\n  return new Promise((res, rej) => {\n    transactionHttp\n      .getTransaction(hash, TransactionGroup.Unconfirmed)\n      .toPromise()\n      .then(() => {\n        rej()\n      })\n      .catch(() => {\n        res()\n      })\n  })\n}\n\nconst checkConfirmed = (hash: string): Promise<Transaction> => {\n  const repositoryFactory = new RepositoryFactoryHttp(NODE)\n  const transactionHttp = repositoryFactory.createTransactionRepository()\n  return new Promise((res, rej) => {\n    transactionHttp\n      .getTransaction(hash, TransactionGroup.Confirmed)\n      .toPromise()\n      .then((tx: Transaction) => {\n        res(tx)\n      })\n      .catch(() => {\n        rej()\n      })\n  })\n}\nconst innerTxJoin = async (hash: string): Promise<string> => {\n  const repositoryFactory = new RepositoryFactoryHttp(NODE)\n  const transactionHttp = repositoryFactory.createTransactionRepository()\n  let data = ''\n\n  return new Promise((resolve) => {\n    transactionHttp\n      .getTransaction(hash, TransactionGroup.Confirmed)\n      .toPromise()\n      .then((agtx) => {\n        const innerTxs = (agtx as AggregateTransaction).innerTransactions\n        for (const inTx of innerTxs) {\n          data += (inTx as TransferTransaction).message.payload\n        }\n        resolve(data)\n      })\n  })\n}\n\nexport const saveFile = async (\n  base64img: string,\n  gameMode: string,\n  previousHash: string\n): Promise<string> => {\n  const signer = Account.createFromPrivateKey(master, NetworkType.TEST_NET)\n  const acc = Address.createFromRawAddress(\n    'TDEC5VUUAUYHKI2Y45WBDMGODAS42P3PPCTMGUY'\n  )\n  const array: string[] = []\n  const MSG_SIZE = 1023\n  for (let i = 0; i <= Math.floor(base64img.length / MSG_SIZE); i++) {\n    const arr = base64img.slice(i * MSG_SIZE, (i + 1) * MSG_SIZE)\n    array.push(arr)\n  }\n  // console.log('arr', array)\n\n  //===================================================\n\n  const txs = []\n  const agtxs = []\n  const hashes: string[] = []\n  //===================================================\n\n  const repositoryFactory = new RepositoryFactoryHttp(NODE)\n  const transactionHttp = repositoryFactory.createTransactionRepository()\n\n  for (let i = 0; i < array.length; i++) {\n    // console.log(\"row\", array[i]);\n    const inTx = TransferTransaction.create(\n      Deadline.create(EPOCH),\n      acc,\n      [],\n      PlainMessage.create(array[i]),\n      NetworkType.TEST_NET\n    ).toAggregate(signer.publicAccount)\n\n    txs.push(inTx)\n\n    if (i % 100 !== 99 && i !== array.length - 1) {\n      continue\n    }\n\n    const agtx = AggregateTransaction.createComplete(\n      Deadline.create(EPOCH),\n      txs,\n      NetworkType.TEST_NET,\n      [],\n      UInt64.fromUint(10000000)\n    )\n\n    const signedTx = signer.sign(agtx, G_HASH)\n\n    transactionHttp.announce(signedTx).subscribe(\n      (x) => console.log(x),\n      (err) => console.error(err)\n    )\n    agtxs.push(signedTx)\n    hashes.push(signedTx.hash)\n\n    console.log('a', signedTx)\n  }\n\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const data = JSON.stringify({\n        version: 1,\n        name: 'symbol-draw',\n        mode: gameMode,\n        previousHash: previousHash,\n        data: hashes.join(','),\n      })\n\n      const a = []\n      for (let i = 0; i <= Math.floor(data.length / MSG_SIZE); i++) {\n        a.push(data.substr(i * MSG_SIZE, MSG_SIZE))\n      }\n      const tx = TransferTransaction.create(\n        Deadline.create(EPOCH),\n        acc,\n        [],\n        PlainMessage.create(data),\n        NetworkType.TEST_NET,\n        UInt64.fromUint(2000000)\n      )\n\n      const st = signer.sign(tx, G_HASH)\n\n      transactionHttp.announce(st).subscribe(\n        (x) => console.log(x),\n        (err) => console.error(err)\n      )\n      resolve(st.hash)\n    }, 1000)\n  })\n}\n"],"sourceRoot":""}